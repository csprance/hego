#pragma once
#include "HAPI/HAPI.h"

struct HoudiniApi
{
public:
   static void initialize_hapi(void *library_handle);
   static void finalize_hapi();
   static bool is_hapi_initialized();

public:
   typedef HAPI_Result (*CreateInProcessSessionFuncPtr)(HAPI_Session *session, const HAPI_SessionInfo *session_info);
   typedef HAPI_Result (*StartThriftSocketServerFuncPtr)(const HAPI_ThriftServerOptions *options, int port, HAPI_ProcessId *process_id, const char *log_file);
   typedef HAPI_Result (*CreateThriftSocketSessionFuncPtr)(HAPI_Session *session, const char *host_name, int port, const HAPI_SessionInfo *session_info);
   typedef HAPI_Result (*StartThriftNamedPipeServerFuncPtr)(const HAPI_ThriftServerOptions *options, const char *pipe_name, HAPI_ProcessId *process_id, const char *log_file);
   typedef HAPI_Result (*CreateThriftNamedPipeSessionFuncPtr)(HAPI_Session *session, const char *pipe_name, const HAPI_SessionInfo *session_info);
   typedef HAPI_Result (*StartThriftSharedMemoryServerFuncPtr)(const HAPI_ThriftServerOptions *options, const char *shared_mem_name, HAPI_ProcessId *process_id, const char *log_file);
   typedef HAPI_Result (*CreateThriftSharedMemorySessionFuncPtr)(HAPI_Session *session, const char *shared_mem_name, const HAPI_SessionInfo *session_info);
   typedef HAPI_Result (*BindCustomImplementationFuncPtr)(HAPI_SessionType session_type, const char *dll_path);
   typedef HAPI_Result (*CreateCustomSessionFuncPtr)(HAPI_SessionType session_type, void *session_info, HAPI_Session *session);
   typedef HAPI_Result (*IsSessionValidFuncPtr)(const HAPI_Session *session);
   typedef HAPI_Result (*CloseSessionFuncPtr)(const HAPI_Session *session);
   typedef HAPI_Result (*IsInitializedFuncPtr)(const HAPI_Session *session);
   typedef HAPI_Result (*InitializeFuncPtr)(const HAPI_Session *session, const HAPI_CookOptions *cook_options, HAPI_Bool use_cooking_thread, int cooking_thread_stack_size, const char *houdini_environment_files, const char *otl_search_path, const char *dso_search_path, const char *image_dso_search_path, const char *audio_dso_search_path);
   typedef HAPI_Result (*CleanupFuncPtr)(const HAPI_Session *session);
   typedef HAPI_Result (*ShutdownFuncPtr)(const HAPI_Session *session);
   typedef HAPI_Result (*StartPerformanceMonitorProfileFuncPtr)(const HAPI_Session *session, const char *title, int *profile_id);
   typedef HAPI_Result (*StopPerformanceMonitorProfileFuncPtr)(const HAPI_Session *session, int profile_id, const char *file_path);
   typedef HAPI_Result (*GetEnvIntFuncPtr)(HAPI_EnvIntType int_type, int *value);
   typedef HAPI_Result (*GetSessionEnvIntFuncPtr)(const HAPI_Session *session, HAPI_SessionEnvIntType int_type, int *value);
   typedef HAPI_Result (*GetServerEnvIntFuncPtr)(const HAPI_Session *session, const char *variable_name, int *value);
   typedef HAPI_Result (*GetServerEnvStringFuncPtr)(const HAPI_Session *session, const char *variable_name, HAPI_StringHandle *value);
   typedef HAPI_Result (*GetServerEnvVarCountFuncPtr)(const HAPI_Session *session, int *env_count);
   typedef HAPI_Result (*GetServerEnvVarListFuncPtr)(const HAPI_Session *session, HAPI_StringHandle *values_array, int start, int length);
   typedef HAPI_Result (*SetServerEnvIntFuncPtr)(const HAPI_Session *session, const char *variable_name, int value);
   typedef HAPI_Result (*SetServerEnvStringFuncPtr)(const HAPI_Session *session, const char *variable_name, const char *value);
   typedef HAPI_Result (*GetStatusFuncPtr)(const HAPI_Session *session, HAPI_StatusType status_type, int *status);
   typedef HAPI_Result (*GetStatusStringBufLengthFuncPtr)(const HAPI_Session *session, HAPI_StatusType status_type, HAPI_StatusVerbosity verbosity, int *buffer_length);
   typedef HAPI_Result (*GetStatusStringFuncPtr)(const HAPI_Session *session, HAPI_StatusType status_type, char *string_value, int length);
   typedef HAPI_Result (*ComposeNodeCookResultFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_StatusVerbosity verbosity, int *buffer_length);
   typedef HAPI_Result (*GetComposedNodeCookResultFuncPtr)(const HAPI_Session *session, char *string_value, int length);
   typedef HAPI_Result (*GetNodeCookResultLengthFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_StatusVerbosity verbosity, int *buffer_length);
   typedef HAPI_Result (*GetNodeCookResultFuncPtr)(const HAPI_Session *session, char *string_value, int length);
   typedef HAPI_Result (*GetMessageNodeCountFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, int *count);
   typedef HAPI_Result (*GetMessageNodeIdsFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_NodeId *message_node_ids_array, int count);
   typedef HAPI_Result (*CheckForSpecificErrorsFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ErrorCodeBits errors_to_look_for, HAPI_ErrorCodeBits *errors_found);
   typedef HAPI_Result (*ClearConnectionErrorFuncPtr)();
   typedef HAPI_Result (*GetConnectionErrorLengthFuncPtr)(int *buffer_length);
   typedef HAPI_Result (*GetConnectionErrorFuncPtr)(char *string_value, int length, HAPI_Bool clear);
   typedef HAPI_Result (*GetCookingTotalCountFuncPtr)(const HAPI_Session *session, int *count);
   typedef HAPI_Result (*GetCookingCurrentCountFuncPtr)(const HAPI_Session *session, int *count);
   typedef HAPI_Result (*InterruptFuncPtr)(const HAPI_Session *session);
   typedef HAPI_Result (*ConvertTransformFuncPtr)(const HAPI_Session *session, const HAPI_TransformEuler *transform_in, HAPI_RSTOrder rst_order, HAPI_XYZOrder rot_order, HAPI_TransformEuler *transform_out);
   typedef HAPI_Result (*ConvertMatrixToQuatFuncPtr)(const HAPI_Session *session, const float *matrix, HAPI_RSTOrder rst_order, HAPI_Transform *transform_out);
   typedef HAPI_Result (*ConvertMatrixToEulerFuncPtr)(const HAPI_Session *session, const float *matrix, HAPI_RSTOrder rst_order, HAPI_XYZOrder rot_order, HAPI_TransformEuler *transform_out);
   typedef HAPI_Result (*ConvertTransformQuatToMatrixFuncPtr)(const HAPI_Session *session, const HAPI_Transform *transform, float *matrix);
   typedef HAPI_Result (*ConvertTransformEulerToMatrixFuncPtr)(const HAPI_Session *session, const HAPI_TransformEuler *transform, float *matrix);
   typedef HAPI_Result (*PythonThreadInterpreterLockFuncPtr)(const HAPI_Session *session, HAPI_Bool locked);
   typedef HAPI_Result (*GetStringBufLengthFuncPtr)(const HAPI_Session *session, HAPI_StringHandle string_handle, int *buffer_length);
   typedef HAPI_Result (*GetStringFuncPtr)(const HAPI_Session *session, HAPI_StringHandle string_handle, char *string_value, int length);
   typedef HAPI_Result (*SetCustomStringFuncPtr)(const HAPI_Session *session, const char *string_value, HAPI_StringHandle *handle_value);
   typedef HAPI_Result (*RemoveCustomStringFuncPtr)(const HAPI_Session *session, const HAPI_StringHandle string_handle);
   typedef HAPI_Result (*GetStringBatchSizeFuncPtr)(const HAPI_Session *session, const int *string_handle_array, int string_handle_count, int *string_buffer_size);
   typedef HAPI_Result (*GetStringBatchFuncPtr)(const HAPI_Session *session, char *char_buffer, int char_array_length);
   typedef HAPI_Result (*GetTimeFuncPtr)(const HAPI_Session *session, float *time);
   typedef HAPI_Result (*SetTimeFuncPtr)(const HAPI_Session *session, float time);
   typedef HAPI_Result (*GetUseHoudiniTimeFuncPtr)(const HAPI_Session *session, HAPI_Bool *enabled);
   typedef HAPI_Result (*SetUseHoudiniTimeFuncPtr)(const HAPI_Session *session, HAPI_Bool enabled);
   typedef HAPI_Result (*GetTimelineOptionsFuncPtr)(const HAPI_Session *session, HAPI_TimelineOptions *timeline_options);
   typedef HAPI_Result (*SetTimelineOptionsFuncPtr)(const HAPI_Session *session, const HAPI_TimelineOptions *timeline_options);
   typedef HAPI_Result (*GetCompositorOptionsFuncPtr)(const HAPI_Session *session, HAPI_CompositorOptions *compositor_options);
   typedef HAPI_Result (*SetCompositorOptionsFuncPtr)(const HAPI_Session *session, const HAPI_CompositorOptions *compositor_options);
   typedef HAPI_Result (*LoadAssetLibraryFromFileFuncPtr)(const HAPI_Session *session, const char *file_path, HAPI_Bool allow_overwrite, HAPI_AssetLibraryId *library_id);
   typedef HAPI_Result (*LoadAssetLibraryFromMemoryFuncPtr)(const HAPI_Session *session, const char *library_buffer, int library_buffer_length, HAPI_Bool allow_overwrite, HAPI_AssetLibraryId *library_id);
   typedef HAPI_Result (*GetAvailableAssetCountFuncPtr)(const HAPI_Session *session, HAPI_AssetLibraryId library_id, int *asset_count);
   typedef HAPI_Result (*GetAvailableAssetsFuncPtr)(const HAPI_Session *session, HAPI_AssetLibraryId library_id, HAPI_StringHandle *asset_names_array, int asset_count);
   typedef HAPI_Result (*GetAssetInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_AssetInfo *asset_info);
   typedef HAPI_Result (*GetAssetDefinitionParmCountsFuncPtr)(const HAPI_Session *session, HAPI_AssetLibraryId library_id, const char *asset_name, int *parm_count, int *int_value_count, int *float_value_count, int *string_value_count, int *choice_value_count);
   typedef HAPI_Result (*GetAssetDefinitionParmInfosFuncPtr)(const HAPI_Session *session, HAPI_AssetLibraryId library_id, const char *asset_name, HAPI_ParmInfo *parm_infos_array, int start, int length);
   typedef HAPI_Result (*GetAssetDefinitionParmValuesFuncPtr)(const HAPI_Session *session, HAPI_AssetLibraryId library_id, const char *asset_name, int *int_values_array, int int_start, int int_length, float *float_values_array, int float_start, int float_length, HAPI_Bool string_evaluate, HAPI_StringHandle *string_values_array, int string_start, int string_length, HAPI_ParmChoiceInfo *choice_values_array, int choice_start, int choice_length);
   typedef HAPI_Result (*GetLoadedAssetLibraryCountFuncPtr)(const HAPI_Session *session, int *count);
   typedef HAPI_Result (*GetAssetLibraryIdsFuncPtr)(const HAPI_Session *session, HAPI_AssetLibraryId *asset_library_ids_array, int start, int length);
   typedef HAPI_Result (*GetAssetLibraryFilePathFuncPtr)(const HAPI_Session *session, HAPI_AssetLibraryId asset_library_id, HAPI_StringHandle *file_path_sh);
   typedef HAPI_Result (*LoadHIPFileFuncPtr)(const HAPI_Session *session, const char *file_name, HAPI_Bool cook_on_load);
   typedef HAPI_Result (*MergeHIPFileFuncPtr)(const HAPI_Session *session, const char *file_name, HAPI_Bool cook_on_load, HAPI_HIPFileId *file_id);
   typedef HAPI_Result (*SaveHIPFileFuncPtr)(const HAPI_Session *session, const char *file_path, HAPI_Bool lock_nodes);
   typedef HAPI_Result (*GetHIPFileNodeCountFuncPtr)(const HAPI_Session *session, HAPI_HIPFileId id, int *count);
   typedef HAPI_Result (*GetHIPFileNodeIdsFuncPtr)(const HAPI_Session *session, HAPI_HIPFileId id, HAPI_NodeId *node_ids, int length);
   typedef HAPI_Result (*IsNodeValidFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, int unique_node_id, HAPI_Bool *answer);
   typedef HAPI_Result (*GetNodeInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_NodeInfo *node_info);
   typedef HAPI_Result (*GetNodePathFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_NodeId relative_to_node_id, HAPI_StringHandle *path);
   typedef HAPI_Result (*GetManagerNodeIdFuncPtr)(const HAPI_Session *session, HAPI_NodeType node_type, HAPI_NodeId *node_id);
   typedef HAPI_Result (*ComposeChildNodeListFuncPtr)(const HAPI_Session *session, HAPI_NodeId parent_node_id, HAPI_NodeTypeBits node_type_filter, HAPI_NodeFlagsBits node_flags_filter, HAPI_Bool recursive, int *count);
   typedef HAPI_Result (*GetComposedChildNodeListFuncPtr)(const HAPI_Session *session, HAPI_NodeId parent_node_id, HAPI_NodeId *child_node_ids_array, int count);
   typedef HAPI_Result (*CreateNodeFuncPtr)(const HAPI_Session *session, HAPI_NodeId parent_node_id, const char *operator_name, const char *node_label, HAPI_Bool cook_on_creation, HAPI_NodeId *new_node_id);
   typedef HAPI_Result (*CreateInputNodeFuncPtr)(const HAPI_Session *session, HAPI_NodeId parent_node_id, HAPI_NodeId *node_id, const char *name);
   typedef HAPI_Result (*CreateInputCurveNodeFuncPtr)(const HAPI_Session *session, HAPI_NodeId parent_node_id, HAPI_NodeId *node_id, const char *name);
   typedef HAPI_Result (*CreateHeightFieldInputFuncPtr)(const HAPI_Session *session, HAPI_NodeId parent_node_id, const char *name, int xsize, int ysize, float voxelsize, HAPI_HeightFieldSampling sampling, HAPI_NodeId *heightfield_node_id, HAPI_NodeId *height_node_id, HAPI_NodeId *mask_node_id, HAPI_NodeId *merge_node_id);
   typedef HAPI_Result (*CreateHeightfieldInputVolumeNodeFuncPtr)(const HAPI_Session *session, HAPI_NodeId parent_node_id, HAPI_NodeId *new_node_id, const char *name, int xsize, int ysize, float voxelsize);
   typedef HAPI_Result (*CookNodeFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const HAPI_CookOptions *cook_options);
   typedef HAPI_Result (*DeleteNodeFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id);
   typedef HAPI_Result (*RenameNodeFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *new_name);
   typedef HAPI_Result (*ConnectNodeInputFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, int input_index, HAPI_NodeId node_id_to_connect, int output_index);
   typedef HAPI_Result (*DisconnectNodeInputFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, int input_index);
   typedef HAPI_Result (*QueryNodeInputFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_to_query, int input_index, HAPI_NodeId *connected_node_id);
   typedef HAPI_Result (*GetNodeInputNameFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, int input_idx, HAPI_StringHandle *name);
   typedef HAPI_Result (*DisconnectNodeOutputsAtFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, int output_index);
   typedef HAPI_Result (*QueryNodeOutputConnectedCountFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, int output_idx, HAPI_Bool into_subnets, HAPI_Bool through_dots, int *connected_count);
   typedef HAPI_Result (*QueryNodeOutputConnectedNodesFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, int output_idx, HAPI_Bool into_subnets, HAPI_Bool through_dots, HAPI_NodeId *connected_node_ids_array, int start, int length);
   typedef HAPI_Result (*GetNodeOutputNameFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, int output_idx, HAPI_StringHandle *name);
   typedef HAPI_Result (*GetNodeFromPathFuncPtr)(const HAPI_Session *session, const HAPI_NodeId parent_node_id, const char *path, HAPI_NodeId *node_id);
   typedef HAPI_Result (*GetOutputNodeIdFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, int output, HAPI_NodeId *output_node_id);
   typedef HAPI_Result (*GetParametersFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmInfo *parm_infos_array, int start, int length);
   typedef HAPI_Result (*GetParmInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmId parm_id, HAPI_ParmInfo *parm_info);
   typedef HAPI_Result (*GetParmIdFromNameFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, HAPI_ParmId *parm_id);
   typedef HAPI_Result (*GetParmInfoFromNameFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, HAPI_ParmInfo *parm_info);
   typedef HAPI_Result (*GetParmTagNameFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int tag_index, HAPI_StringHandle *tag_name);
   typedef HAPI_Result (*GetParmTagValueFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmId parm_id, const char *tag_name, HAPI_StringHandle *tag_value);
   typedef HAPI_Result (*ParmHasTagFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmId parm_id, const char *tag_name, HAPI_Bool *has_tag);
   typedef HAPI_Result (*ParmHasExpressionFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, int index, HAPI_Bool *has_expression);
   typedef HAPI_Result (*GetParmWithTagFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *tag_name, HAPI_ParmId *parm_id);
   typedef HAPI_Result (*GetParmExpressionFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, int index, HAPI_StringHandle *value);
   typedef HAPI_Result (*RevertParmToDefaultFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, int index);
   typedef HAPI_Result (*RevertParmToDefaultsFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name);
   typedef HAPI_Result (*SetParmExpressionFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *value, HAPI_ParmId parm_id, int index);
   typedef HAPI_Result (*RemoveParmExpressionFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int index);
   typedef HAPI_Result (*GetParmIntValueFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, int index, int *value);
   typedef HAPI_Result (*GetParmIntValuesFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, int *values_array, int start, int length);
   typedef HAPI_Result (*GetParmFloatValueFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, int index, float *value);
   typedef HAPI_Result (*GetParmFloatValuesFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, float *values_array, int start, int length);
   typedef HAPI_Result (*GetParmStringValueFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, int index, HAPI_Bool evaluate, HAPI_StringHandle *value);
   typedef HAPI_Result (*GetParmStringValuesFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_Bool evaluate, HAPI_StringHandle *values_array, int start, int length);
   typedef HAPI_Result (*GetParmNodeValueFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, HAPI_NodeId *value);
   typedef HAPI_Result (*GetParmFileFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, const char *destination_directory, const char *destination_file_name);
   typedef HAPI_Result (*GetParmChoiceListsFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmChoiceInfo *parm_choices_array, int start, int length);
   typedef HAPI_Result (*SetParmIntValueFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, int index, int value);
   typedef HAPI_Result (*SetParmIntValuesFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const int *values_array, int start, int length);
   typedef HAPI_Result (*SetParmFloatValueFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, int index, float value);
   typedef HAPI_Result (*SetParmFloatValuesFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const float *values_array, int start, int length);
   typedef HAPI_Result (*SetParmStringValueFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *value, HAPI_ParmId parm_id, int index);
   typedef HAPI_Result (*SetParmNodeValueFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, HAPI_NodeId value);
   typedef HAPI_Result (*InsertMultiparmInstanceFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int instance_position);
   typedef HAPI_Result (*RemoveMultiparmInstanceFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int instance_position);
   typedef HAPI_Result (*GetHandleInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_HandleInfo *handle_infos_array, int start, int length);
   typedef HAPI_Result (*GetHandleBindingInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, int handle_index, HAPI_HandleBindingInfo *handle_binding_infos_array, int start, int length);
   typedef HAPI_Result (*GetPresetBufLengthFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PresetType preset_type, const char *preset_name, int *buffer_length);
   typedef HAPI_Result (*GetPresetFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, char *buffer, int buffer_length);
   typedef HAPI_Result (*SetPresetFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PresetType preset_type, const char *preset_name, const char *buffer, int buffer_length);
   typedef HAPI_Result (*GetPresetCountFuncPtr)(const HAPI_Session *session, const char *buffer, int buffer_length, int *count);
   typedef HAPI_Result (*GetPresetNamesFuncPtr)(const HAPI_Session *session, const char *buffer, int buffer_length, HAPI_StringHandle *preset_names_array, int count);
   typedef HAPI_Result (*GetObjectInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ObjectInfo *object_info);
   typedef HAPI_Result (*GetObjectTransformFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_NodeId relative_to_node_id, HAPI_RSTOrder rst_order, HAPI_Transform *transform);
   typedef HAPI_Result (*ComposeObjectListFuncPtr)(const HAPI_Session *session, HAPI_NodeId parent_node_id, const char *categories, int *object_count);
   typedef HAPI_Result (*GetComposedObjectListFuncPtr)(const HAPI_Session *session, HAPI_NodeId parent_node_id, HAPI_ObjectInfo *object_infos_array, int start, int length);
   typedef HAPI_Result (*GetComposedObjectTransformsFuncPtr)(const HAPI_Session *session, HAPI_NodeId parent_node_id, HAPI_RSTOrder rst_order, HAPI_Transform *transform_array, int start, int length);
   typedef HAPI_Result (*GetInstancedObjectIdsFuncPtr)(const HAPI_Session *session, HAPI_NodeId object_node_id, HAPI_NodeId *instanced_node_id_array, int start, int length);
   typedef HAPI_Result (*GetInstanceTransformsOnPartFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_RSTOrder rst_order, HAPI_Transform *transforms_array, int start, int length);
   typedef HAPI_Result (*SetObjectTransformFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const HAPI_TransformEuler *trans);
   typedef HAPI_Result (*GetDisplayGeoInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId object_node_id, HAPI_GeoInfo *geo_info);
   typedef HAPI_Result (*GetOutputGeoCountFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, int *count);
   typedef HAPI_Result (*GetOutputGeoInfosFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_GeoInfo *geo_infos_array, int count);
   typedef HAPI_Result (*GetGeoInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_GeoInfo *geo_info);
   typedef HAPI_Result (*GetPartInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_PartInfo *part_info);
   typedef HAPI_Result (*GetEdgeCountOfEdgeGroupFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *group_name, int *edge_count);
   typedef HAPI_Result (*GetFaceCountsFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int *face_counts_array, int start, int length);
   typedef HAPI_Result (*GetVertexListFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int *vertex_list_array, int start, int length);
   typedef HAPI_Result (*GetAttributeInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeOwner owner, HAPI_AttributeInfo *attr_info);
   typedef HAPI_Result (*GetAttributeNamesFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_AttributeOwner owner, HAPI_StringHandle *attribute_names_array, int count);
   typedef HAPI_Result (*GetAttributeIntDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, int *data_array, int start, int length);
   typedef HAPI_Result (*GetAttributeIntArrayDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length);
   typedef HAPI_Result (*GetAttributeUInt8DataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, HAPI_UInt8 *data_array, int start, int length);
   typedef HAPI_Result (*GetAttributeUInt8ArrayDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_UInt8 *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length);
   typedef HAPI_Result (*GetAttributeInt8DataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, HAPI_Int8 *data_array, int start, int length);
   typedef HAPI_Result (*GetAttributeInt8ArrayDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_Int8 *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length);
   typedef HAPI_Result (*GetAttributeInt16DataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, HAPI_Int16 *data_array, int start, int length);
   typedef HAPI_Result (*GetAttributeInt16ArrayDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_Int16 *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length);
   typedef HAPI_Result (*GetAttributeInt64DataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, HAPI_Int64 *data_array, int start, int length);
   typedef HAPI_Result (*GetAttributeInt64ArrayDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_Int64 *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length);
   typedef HAPI_Result (*GetAttributeFloatDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, float *data_array, int start, int length);
   typedef HAPI_Result (*GetAttributeFloatArrayDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, float *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length);
   typedef HAPI_Result (*GetAttributeFloat64DataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, double *data_array, int start, int length);
   typedef HAPI_Result (*GetAttributeFloat64ArrayDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, double *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length);
   typedef HAPI_Result (*GetAttributeStringDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_StringHandle *data_array, int start, int length);
   typedef HAPI_Result (*GetAttributeStringArrayDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_StringHandle *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length);
   typedef HAPI_Result (*GetAttributeDictionaryDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_StringHandle *data_array, int start, int length);
   typedef HAPI_Result (*GetAttributeDictionaryArrayDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_StringHandle *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length);
   typedef HAPI_Result (*GetAttributeIntDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, int *data_array, int start, int length, int *job_id);
   typedef HAPI_Result (*GetAttributeUInt8DataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, HAPI_UInt8 *data_array, int start, int length, int *job_id);
   typedef HAPI_Result (*GetAttributeInt8DataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, HAPI_Int8 *data_array, int start, int length, int *job_id);
   typedef HAPI_Result (*GetAttributeInt16DataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, HAPI_Int16 *data_array, int start, int length, int *job_id);
   typedef HAPI_Result (*GetAttributeInt64DataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, HAPI_Int64 *data_array, int start, int length, int *job_id);
   typedef HAPI_Result (*GetAttributeFloatDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, float *data_array, int start, int length, int *job_id);
   typedef HAPI_Result (*GetAttributeFloat64DataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, double *data_array, int start, int length, int *job_id);
   typedef HAPI_Result (*GetAttributeStringDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_StringHandle *data_array, int start, int length, int *job_id);
   typedef HAPI_Result (*GetAttributeDictionaryDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_StringHandle *data_array, int start, int length, int *job_id);
   typedef HAPI_Result (*GetAttributeIntArrayDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *attr_name, HAPI_AttributeInfo *attr_info, int *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   typedef HAPI_Result (*GetAttributeUInt8ArrayDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *attr_name, HAPI_AttributeInfo *attr_info, HAPI_UInt8 *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   typedef HAPI_Result (*GetAttributeInt8ArrayDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *attr_name, HAPI_AttributeInfo *attr_info, HAPI_Int8 *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   typedef HAPI_Result (*GetAttributeInt16ArrayDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *attr_name, HAPI_AttributeInfo *attr_info, HAPI_Int16 *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   typedef HAPI_Result (*GetAttributeInt64ArrayDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *attr_name, HAPI_AttributeInfo *attr_info, HAPI_Int64 *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   typedef HAPI_Result (*GetAttributeFloatArrayDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *attr_name, HAPI_AttributeInfo *attr_info, float *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   typedef HAPI_Result (*GetAttributeFloat64ArrayDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *attr_name, HAPI_AttributeInfo *attr_info, double *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   typedef HAPI_Result (*GetAttributeStringArrayDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *attr_name, HAPI_AttributeInfo *attr_info, HAPI_StringHandle *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   typedef HAPI_Result (*GetAttributeDictionaryArrayDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *attr_name, HAPI_AttributeInfo *attr_info, HAPI_StringHandle *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   typedef HAPI_Result (*GetJobStatusFuncPtr)(const HAPI_Session *session, int job_id, HAPI_JobStatus *job_status);
   typedef HAPI_Result (*GetGroupNamesFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_GroupType group_type, HAPI_StringHandle *group_names_array, int group_count);
   typedef HAPI_Result (*GetGroupMembershipFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char *group_name, HAPI_Bool *membership_array_all_equal, int *membership_array, int start, int length);
   typedef HAPI_Result (*GetGroupCountOnPackedInstancePartFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int *pointGroupCount, int *primitiveGroupCount);
   typedef HAPI_Result (*GetGroupNamesOnPackedInstancePartFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, HAPI_StringHandle *group_names_array, int group_count);
   typedef HAPI_Result (*GetGroupMembershipOnPackedInstancePartFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char *group_name, HAPI_Bool *membership_array_all_equal, int *membership_array, int start, int length);
   typedef HAPI_Result (*GetInstancedPartIdsFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_PartId *instanced_parts_array, int start, int length);
   typedef HAPI_Result (*GetInstancerPartTransformsFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_RSTOrder rst_order, HAPI_Transform *transforms_array, int start, int length);
   typedef HAPI_Result (*SetPartInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_PartInfo *part_info);
   typedef HAPI_Result (*SetFaceCountsFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const int *face_counts_array, int start, int length);
   typedef HAPI_Result (*SetVertexListFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const int *vertex_list_array, int start, int length);
   typedef HAPI_Result (*AddAttributeFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info);
   typedef HAPI_Result (*DeleteAttributeFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info);
   typedef HAPI_Result (*SetAttributeIntDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const int *data_array, int start, int length);
   typedef HAPI_Result (*SetAttributeUInt8DataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_UInt8 *data_array, int start, int length);
   typedef HAPI_Result (*SetAttributeInt8DataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int8 *data_array, int start, int length);
   typedef HAPI_Result (*SetAttributeInt16DataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int16 *data_array, int start, int length);
   typedef HAPI_Result (*SetAttributeInt64DataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int64 *data_array, int start, int length);
   typedef HAPI_Result (*SetAttributeFloatDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const float *data_array, int start, int length);
   typedef HAPI_Result (*SetAttributeFloat64DataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const double *data_array, int start, int length);
   typedef HAPI_Result (*SetAttributeStringDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **data_array, int start, int length);
   typedef HAPI_Result (*SetAttributeIndexedStringDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **string_array, int string_count, const int *indices_array, int indices_start, int indices_length);
   typedef HAPI_Result (*SetAttributeStringUniqueDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char *data_array, int data_length, int start_index, int num_indices);
   typedef HAPI_Result (*SetAttributeIntUniqueDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const int *data_array, int data_length, int start_index, int num_indices);
   typedef HAPI_Result (*SetAttributeUInt8UniqueDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_UInt8 *data_array, int data_length, int start_index, int num_indices);
   typedef HAPI_Result (*SetAttributeInt8UniqueDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int8 *data_array, int data_length, int start_index, int num_indices);
   typedef HAPI_Result (*SetAttributeInt16UniqueDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int16 *data_array, int data_length, int start_index, int num_indices);
   typedef HAPI_Result (*SetAttributeInt64UniqueDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int64 *data_array, int data_length, int start_index, int num_indices);
   typedef HAPI_Result (*SetAttributeFloatUniqueDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const float *data_array, int data_length, int start_index, int num_indices);
   typedef HAPI_Result (*SetAttributeFloat64UniqueDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const double *data_array, int data_length, int start_index, int num_indices);
   typedef HAPI_Result (*SetAttributeDictionaryDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **data_array, int start, int length);
   typedef HAPI_Result (*SetAttributeIntArrayDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const int *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length);
   typedef HAPI_Result (*SetAttributeUInt8ArrayDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_UInt8 *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length);
   typedef HAPI_Result (*SetAttributeInt8ArrayDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int8 *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length);
   typedef HAPI_Result (*SetAttributeInt16ArrayDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int16 *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length);
   typedef HAPI_Result (*SetAttributeInt64ArrayDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int64 *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length);
   typedef HAPI_Result (*SetAttributeFloatArrayDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const float *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length);
   typedef HAPI_Result (*SetAttributeFloat64ArrayDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const double *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length);
   typedef HAPI_Result (*SetAttributeStringArrayDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length);
   typedef HAPI_Result (*SetAttributeDictionaryArrayDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length);
   typedef HAPI_Result (*SetAttributeIntDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const int *data_array, int start, int length, int *job_id);
   typedef HAPI_Result (*SetAttributeUInt8DataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_UInt8 *data_array, int start, int length, int *job_id);
   typedef HAPI_Result (*SetAttributeInt8DataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int8 *data_array, int start, int length, int *job_id);
   typedef HAPI_Result (*SetAttributeInt16DataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int16 *data_array, int start, int length, int *job_id);
   typedef HAPI_Result (*SetAttributeInt64DataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int64 *data_array, int start, int length, int *job_id);
   typedef HAPI_Result (*SetAttributeFloatDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const float *data_array, int start, int length, int *job_id);
   typedef HAPI_Result (*SetAttributeFloat64DataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const double *data_array, int start, int length, int *job_id);
   typedef HAPI_Result (*SetAttributeStringDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **data_array, int start, int length, int *job_id);
   typedef HAPI_Result (*SetAttributeIndexedStringDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **string_array, int string_count, const int *indices_array, int indices_start, int indices_length, int *job_id);
   typedef HAPI_Result (*SetAttributeStringUniqueDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char *data_array, int data_length, int start_index, int num_indices, int *job_id);
   typedef HAPI_Result (*SetAttributeIntUniqueDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const int *data_array, int data_length, int start_index, int num_indices, int *job_id);
   typedef HAPI_Result (*SetAttributeUInt8UniqueDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_UInt8 *data_array, int data_length, int start_index, int num_indices, int *job_id);
   typedef HAPI_Result (*SetAttributeInt8UniqueDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int8 *data_array, int data_length, int start_index, int num_indices, int *job_id);
   typedef HAPI_Result (*SetAttributeInt16UniqueDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int16 *data_array, int data_length, int start_index, int num_indices, int *job_id);
   typedef HAPI_Result (*SetAttributeInt64UniqueDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int64 *data_array, int data_length, int start_index, int num_indices, int *job_id);
   typedef HAPI_Result (*SetAttributeFloatUniqueDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const float *data_array, int data_length, int start_index, int num_indices, int *job_id);
   typedef HAPI_Result (*SetAttributeFloat64UniqueDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const double *data_array, int data_length, int start_index, int num_indices, int *job_id);
   typedef HAPI_Result (*SetAttributeDictionaryDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **data_array, int start, int length, int *job_id);
   typedef HAPI_Result (*SetAttributeIntArrayDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const int *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   typedef HAPI_Result (*SetAttributeUInt8ArrayDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_UInt8 *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   typedef HAPI_Result (*SetAttributeInt8ArrayDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int8 *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   typedef HAPI_Result (*SetAttributeInt16ArrayDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int16 *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   typedef HAPI_Result (*SetAttributeInt64ArrayDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int64 *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   typedef HAPI_Result (*SetAttributeFloatArrayDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const float *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   typedef HAPI_Result (*SetAttributeFloat64ArrayDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const double *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   typedef HAPI_Result (*SetAttributeStringArrayDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   typedef HAPI_Result (*SetAttributeDictionaryArrayDataAsyncFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   typedef HAPI_Result (*AddGroupFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char *group_name);
   typedef HAPI_Result (*DeleteGroupFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char *group_name);
   typedef HAPI_Result (*SetGroupMembershipFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char *group_name, const int *membership_array, int start, int length);
   typedef HAPI_Result (*CommitGeoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id);
   typedef HAPI_Result (*RevertGeoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id);
   typedef HAPI_Result (*GetMaterialNodeIdsOnFacesFuncPtr)(const HAPI_Session *session, HAPI_NodeId geometry_node_id, HAPI_PartId part_id, HAPI_Bool *are_all_the_same, HAPI_NodeId *material_ids_array, int start, int length);
   typedef HAPI_Result (*GetMaterialInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId material_node_id, HAPI_MaterialInfo *material_info);
   typedef HAPI_Result (*RenderCOPToImageFuncPtr)(const HAPI_Session *session, HAPI_NodeId cop_node_id);
   typedef HAPI_Result (*RenderTextureToImageFuncPtr)(const HAPI_Session *session, HAPI_NodeId material_node_id, HAPI_ParmId parm_id);
   typedef HAPI_Result (*GetImageInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId material_node_id, HAPI_ImageInfo *image_info);
   typedef HAPI_Result (*SetImageInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId material_node_id, const HAPI_ImageInfo *image_info);
   typedef HAPI_Result (*GetImagePlaneCountFuncPtr)(const HAPI_Session *session, HAPI_NodeId material_node_id, int *image_plane_count);
   typedef HAPI_Result (*GetImagePlanesFuncPtr)(const HAPI_Session *session, HAPI_NodeId material_node_id, HAPI_StringHandle *image_planes_array, int image_plane_count);
   typedef HAPI_Result (*ExtractImageToFileFuncPtr)(const HAPI_Session *session, HAPI_NodeId material_node_id, const char *image_file_format_name, const char *image_planes, const char *destination_folder_path, const char *destination_file_name, int *destination_file_path);
   typedef HAPI_Result (*GetImageFilePathFuncPtr)(const HAPI_Session *session, HAPI_NodeId material_node_id, const char *image_file_format_name, const char *image_planes, const char *destination_folder_path, const char *destination_file_name, HAPI_ParmId texture_parm_id, int *destination_file_path);
   typedef HAPI_Result (*ExtractImageToMemoryFuncPtr)(const HAPI_Session *session, HAPI_NodeId material_node_id, const char *image_file_format_name, const char *image_planes, int *buffer_size);
   typedef HAPI_Result (*GetImageMemoryBufferFuncPtr)(const HAPI_Session *session, HAPI_NodeId material_node_id, char *buffer, int length);
   typedef HAPI_Result (*GetSupportedImageFileFormatCountFuncPtr)(const HAPI_Session *session, int *file_format_count);
   typedef HAPI_Result (*GetSupportedImageFileFormatsFuncPtr)(const HAPI_Session *session, HAPI_ImageFileFormat *formats_array, int file_format_count);
   typedef HAPI_Result (*SetAnimCurveFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int parm_index, const HAPI_Keyframe *curve_keyframes_array, int keyframe_count);
   typedef HAPI_Result (*SetTransformAnimCurveFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_TransformComponent trans_comp, const HAPI_Keyframe *curve_keyframes_array, int keyframe_count);
   typedef HAPI_Result (*ResetSimulationFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id);
   typedef HAPI_Result (*GetVolumeInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeInfo *volume_info);
   typedef HAPI_Result (*GetFirstVolumeTileFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeTileInfo *tile);
   typedef HAPI_Result (*GetNextVolumeTileFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeTileInfo *tile);
   typedef HAPI_Result (*GetVolumeVoxelFloatDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, float *values_array, int value_count);
   typedef HAPI_Result (*GetVolumeTileFloatDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, float fill_value, const HAPI_VolumeTileInfo *tile, float *values_array, int length);
   typedef HAPI_Result (*GetVolumeVoxelIntDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, int *values_array, int value_count);
   typedef HAPI_Result (*GetVolumeTileIntDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int fill_value, const HAPI_VolumeTileInfo *tile, int *values_array, int length);
   typedef HAPI_Result (*GetHeightFieldDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, float *values_array, int start, int length);
   typedef HAPI_Result (*SetVolumeInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_VolumeInfo *volume_info);
   typedef HAPI_Result (*SetVolumeTileFloatDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_VolumeTileInfo *tile, const float *values_array, int length);
   typedef HAPI_Result (*SetVolumeTileIntDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_VolumeTileInfo *tile, const int *values_array, int length);
   typedef HAPI_Result (*SetVolumeVoxelFloatDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, const float *values_array, int value_count);
   typedef HAPI_Result (*SetVolumeVoxelIntDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, const int *values_array, int value_count);
   typedef HAPI_Result (*GetVolumeBoundsFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, float *x_min, float *y_min, float *z_min, float *x_max, float *y_max, float *z_max, float *x_center, float *y_center, float *z_center);
   typedef HAPI_Result (*SetHeightFieldDataFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const float *values_array, int start, int length);
   typedef HAPI_Result (*GetVolumeVisualInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeVisualInfo *visual_info);
   typedef HAPI_Result (*GetCurveInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_CurveInfo *info);
   typedef HAPI_Result (*GetCurveCountsFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int *counts_array, int start, int length);
   typedef HAPI_Result (*GetCurveOrdersFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int *orders_array, int start, int length);
   typedef HAPI_Result (*GetCurveKnotsFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, float *knots_array, int start, int length);
   typedef HAPI_Result (*SetCurveInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_CurveInfo *info);
   typedef HAPI_Result (*SetCurveCountsFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const int *counts_array, int start, int length);
   typedef HAPI_Result (*SetCurveOrdersFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const int *orders_array, int start, int length);
   typedef HAPI_Result (*SetCurveKnotsFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const float *knots_array, int start, int length);
   typedef HAPI_Result (*GetInputCurveInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_InputCurveInfo *info);
   typedef HAPI_Result (*SetInputCurveInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_InputCurveInfo *info);
   typedef HAPI_Result (*SetInputCurvePositionsFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const float *positions_array, int start, int length);
   typedef HAPI_Result (*SetInputCurvePositionsRotationsScalesFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const float *positions_array, int positions_start, int positions_length, const float *rotations_array, int rotations_start, int rotations_length, const float *scales_array, int scales_start, int scales_length);
   typedef HAPI_Result (*GetBoxInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId geo_node_id, HAPI_PartId part_id, HAPI_BoxInfo *box_info);
   typedef HAPI_Result (*GetSphereInfoFuncPtr)(const HAPI_Session *session, HAPI_NodeId geo_node_id, HAPI_PartId part_id, HAPI_SphereInfo *sphere_info);
   typedef HAPI_Result (*GetActiveCacheCountFuncPtr)(const HAPI_Session *session, int *active_cache_count);
   typedef HAPI_Result (*GetActiveCacheNamesFuncPtr)(const HAPI_Session *session, HAPI_StringHandle *cache_names_array, int active_cache_count);
   typedef HAPI_Result (*GetCachePropertyFuncPtr)(const HAPI_Session *session, const char *cache_name, HAPI_CacheProperty cache_property, int *property_value);
   typedef HAPI_Result (*SetCachePropertyFuncPtr)(const HAPI_Session *session, const char *cache_name, HAPI_CacheProperty cache_property, int property_value);
   typedef HAPI_Result (*SaveGeoToFileFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *file_name);
   typedef HAPI_Result (*LoadGeoFromFileFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *file_name);
   typedef HAPI_Result (*SaveNodeToFileFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *file_name);
   typedef HAPI_Result (*LoadNodeFromFileFuncPtr)(const HAPI_Session *session, const char *file_name, HAPI_NodeId parent_node_id, const char *node_label, HAPI_Bool cook_on_load, HAPI_NodeId *new_node_id);
   typedef HAPI_Result (*GetGeoSizeFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *format, int *size);
   typedef HAPI_Result (*SaveGeoToMemoryFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, char *buffer, int length);
   typedef HAPI_Result (*LoadGeoFromMemoryFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, const char *format, const char *buffer, int length);
   typedef HAPI_Result (*SetNodeDisplayFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, int onOff);
   typedef HAPI_Result (*GetTotalCookCountFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_NodeTypeBits node_type_filter, HAPI_NodeFlagsBits node_flags_filter, HAPI_Bool recursive, int *count);
   typedef HAPI_Result (*SetSessionSyncFuncPtr)(const HAPI_Session *session, HAPI_Bool enable);
   typedef HAPI_Result (*GetViewportFuncPtr)(const HAPI_Session *session, HAPI_Viewport *viewport);
   typedef HAPI_Result (*SetViewportFuncPtr)(const HAPI_Session *session, const HAPI_Viewport *viewport);
   typedef HAPI_Result (*GetSessionSyncInfoFuncPtr)(const HAPI_Session *session, HAPI_SessionSyncInfo *session_sync_info);
   typedef HAPI_Result (*SetSessionSyncInfoFuncPtr)(const HAPI_Session *session, const HAPI_SessionSyncInfo *session_sync_info);
   typedef HAPI_Result (*GetPDGGraphContextsFuncPtr)(const HAPI_Session *session, HAPI_StringHandle *context_names_array, HAPI_PDG_GraphContextId *context_id_array, int start, int length);
   typedef HAPI_Result (*GetPDGGraphContextsCountFuncPtr)(const HAPI_Session *session, int *num_contexts);
   typedef HAPI_Result (*GetPDGGraphContextIdFuncPtr)(const HAPI_Session *session, HAPI_NodeId top_node_id, HAPI_PDG_GraphContextId *context_id);
   typedef HAPI_Result (*CookPDGFuncPtr)(const HAPI_Session *session, HAPI_NodeId cook_node_id, int generate_only, int blocking);
   typedef HAPI_Result (*CookPDGAllOutputsFuncPtr)(const HAPI_Session *session, HAPI_NodeId cook_node_id, int generate_only, int blocking);
   typedef HAPI_Result (*GetPDGEventsFuncPtr)(const HAPI_Session *session, HAPI_PDG_GraphContextId graph_context_id, HAPI_PDG_EventInfo *event_array, int length, int *event_count, int *remaining_events);
   typedef HAPI_Result (*GetPDGStateFuncPtr)(const HAPI_Session *session, HAPI_PDG_GraphContextId graph_context_id, int *pdg_state);
   typedef HAPI_Result (*CreateWorkItemFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId *work_item_id, const char *name, int index);
   typedef HAPI_Result (*GetWorkItemInfoFuncPtr)(const HAPI_Session *session, HAPI_PDG_GraphContextId graph_context_id, HAPI_PDG_WorkItemId work_item_id, HAPI_PDG_WorkItemInfo *work_item_info);
   typedef HAPI_Result (*SetWorkItemIntAttributeFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char *attribute_name, const int *values_array, int length);
   typedef HAPI_Result (*SetWorkItemFloatAttributeFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char *attribute_name, const float *values_array, int length);
   typedef HAPI_Result (*SetWorkItemStringAttributeFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char *attribute_name, int data_index, const char *value);
   typedef HAPI_Result (*CommitWorkItemsFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id);
   typedef HAPI_Result (*GetNumWorkItemsFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, int *num);
   typedef HAPI_Result (*GetWorkItemsFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, int *work_item_ids_array, int length);
   typedef HAPI_Result (*GetWorkItemAttributeSizeFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char *attribute_name, int *length);
   typedef HAPI_Result (*GetWorkItemIntAttributeFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char *attribute_name, int *data_array, int length);
   typedef HAPI_Result (*GetWorkItemFloatAttributeFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char *attribute_name, float *data_array, int length);
   typedef HAPI_Result (*GetWorkItemStringAttributeFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char *attribute_name, HAPI_StringHandle *data_array, int length);
   typedef HAPI_Result (*GetWorkItemOutputFilesFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, HAPI_PDG_WorkItemOutputFile *resultinfo_array, int resultinfo_count);
   typedef HAPI_Result (*DirtyPDGNodeFuncPtr)(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_Bool clean_results);
   typedef HAPI_Result (*PausePDGCookFuncPtr)(const HAPI_Session *session, HAPI_PDG_GraphContextId graph_context_id);
   typedef HAPI_Result (*CancelPDGCookFuncPtr)(const HAPI_Session *session, HAPI_PDG_GraphContextId graph_context_id);
   typedef void (*SessionInfo_InitFuncPtr)(HAPI_SessionInfo *in);
   typedef HAPI_SessionInfo (*SessionInfo_CreateFuncPtr)();
   typedef void (*ThriftServerOptions_InitFuncPtr)(HAPI_ThriftServerOptions *in);
   typedef HAPI_ThriftServerOptions (*ThriftServerOptions_CreateFuncPtr)();
   typedef void (*TimelineOptions_InitFuncPtr)(HAPI_TimelineOptions *in);
   typedef HAPI_TimelineOptions (*TimelineOptions_CreateFuncPtr)();
   typedef void (*CompositorOptions_InitFuncPtr)(HAPI_CompositorOptions *in);
   typedef HAPI_CompositorOptions (*CompositorOptions_CreateFuncPtr)();
   typedef void (*AssetInfo_InitFuncPtr)(HAPI_AssetInfo *in);
   typedef HAPI_AssetInfo (*AssetInfo_CreateFuncPtr)();
   typedef void (*CookOptions_InitFuncPtr)(HAPI_CookOptions *in);
   typedef HAPI_CookOptions (*CookOptions_CreateFuncPtr)();
   typedef HAPI_Bool (*CookOptions_AreEqualFuncPtr)(const HAPI_CookOptions *left, const HAPI_CookOptions *right);
   typedef void (*NodeInfo_InitFuncPtr)(HAPI_NodeInfo *in);
   typedef HAPI_NodeInfo (*NodeInfo_CreateFuncPtr)();
   typedef void (*ParmInfo_InitFuncPtr)(HAPI_ParmInfo *in);
   typedef HAPI_ParmInfo (*ParmInfo_CreateFuncPtr)();
   typedef HAPI_Bool (*ParmInfo_IsIntFuncPtr)(const HAPI_ParmInfo *in);
   typedef HAPI_Bool (*ParmInfo_IsFloatFuncPtr)(const HAPI_ParmInfo *in);
   typedef HAPI_Bool (*ParmInfo_IsStringFuncPtr)(const HAPI_ParmInfo *in);
   typedef HAPI_Bool (*ParmInfo_IsPathFuncPtr)(const HAPI_ParmInfo *in);
   typedef HAPI_Bool (*ParmInfo_IsNodeFuncPtr)(const HAPI_ParmInfo *in);
   typedef HAPI_Bool (*ParmInfo_IsNonValueFuncPtr)(const HAPI_ParmInfo *in);
   typedef int (*ParmInfo_GetIntValueCountFuncPtr)(const HAPI_ParmInfo *in);
   typedef int (*ParmInfo_GetFloatValueCountFuncPtr)(const HAPI_ParmInfo *in);
   typedef int (*ParmInfo_GetStringValueCountFuncPtr)(const HAPI_ParmInfo *in);
   typedef void (*ParmChoiceInfo_InitFuncPtr)(HAPI_ParmChoiceInfo *in);
   typedef HAPI_ParmChoiceInfo (*ParmChoiceInfo_CreateFuncPtr)();
   typedef void (*HandleInfo_InitFuncPtr)(HAPI_HandleInfo *in);
   typedef HAPI_HandleInfo (*HandleInfo_CreateFuncPtr)();
   typedef void (*HandleBindingInfo_InitFuncPtr)(HAPI_HandleBindingInfo *in);
   typedef HAPI_HandleBindingInfo (*HandleBindingInfo_CreateFuncPtr)();
   typedef void (*ObjectInfo_InitFuncPtr)(HAPI_ObjectInfo *in);
   typedef HAPI_ObjectInfo (*ObjectInfo_CreateFuncPtr)();
   typedef void (*GeoInfo_InitFuncPtr)(HAPI_GeoInfo *in);
   typedef HAPI_GeoInfo (*GeoInfo_CreateFuncPtr)();
   typedef int (*GeoInfo_GetGroupCountByTypeFuncPtr)(HAPI_GeoInfo *in, HAPI_GroupType type);
   typedef void (*PartInfo_InitFuncPtr)(HAPI_PartInfo *in);
   typedef HAPI_PartInfo (*PartInfo_CreateFuncPtr)();
   typedef int (*PartInfo_GetElementCountByAttributeOwnerFuncPtr)(HAPI_PartInfo *in, HAPI_AttributeOwner owner);
   typedef int (*PartInfo_GetElementCountByGroupTypeFuncPtr)(HAPI_PartInfo *in, HAPI_GroupType type);
   typedef int (*PartInfo_GetAttributeCountByOwnerFuncPtr)(HAPI_PartInfo *in, HAPI_AttributeOwner owner);
   typedef void (*AttributeInfo_InitFuncPtr)(HAPI_AttributeInfo *in);
   typedef HAPI_AttributeInfo (*AttributeInfo_CreateFuncPtr)();
   typedef void (*MaterialInfo_InitFuncPtr)(HAPI_MaterialInfo *in);
   typedef HAPI_MaterialInfo (*MaterialInfo_CreateFuncPtr)();
   typedef void (*ImageFileFormat_InitFuncPtr)(HAPI_ImageFileFormat *in);
   typedef HAPI_ImageFileFormat (*ImageFileFormat_CreateFuncPtr)();
   typedef void (*ImageInfo_InitFuncPtr)(HAPI_ImageInfo *in);
   typedef HAPI_ImageInfo (*ImageInfo_CreateFuncPtr)();
   typedef void (*Keyframe_InitFuncPtr)(HAPI_Keyframe *in);
   typedef HAPI_Keyframe (*Keyframe_CreateFuncPtr)();
   typedef void (*VolumeInfo_InitFuncPtr)(HAPI_VolumeInfo *in);
   typedef HAPI_VolumeInfo (*VolumeInfo_CreateFuncPtr)();
   typedef void (*VolumeTileInfo_InitFuncPtr)(HAPI_VolumeTileInfo *in);
   typedef HAPI_VolumeTileInfo (*VolumeTileInfo_CreateFuncPtr)();
   typedef void (*CurveInfo_InitFuncPtr)(HAPI_CurveInfo *in);
   typedef HAPI_CurveInfo (*CurveInfo_CreateFuncPtr)();
   typedef void (*InputCurveInfo_InitFuncPtr)(HAPI_InputCurveInfo *in);
   typedef HAPI_InputCurveInfo (*InputCurveInfo_CreateFuncPtr)();
   typedef void (*Transform_InitFuncPtr)(HAPI_Transform *in);
   typedef HAPI_Transform (*Transform_CreateFuncPtr)();
   typedef void (*TransformEuler_InitFuncPtr)(HAPI_TransformEuler *in);
   typedef HAPI_TransformEuler (*TransformEuler_CreateFuncPtr)();
   typedef void (*Viewport_InitFuncPtr)(HAPI_Viewport *in);
   typedef HAPI_Viewport (*Viewport_CreateFuncPtr)();
   typedef void (*SessionSyncInfo_InitFuncPtr)(HAPI_SessionSyncInfo *in);
   typedef HAPI_SessionSyncInfo (*SessionSyncInfo_CreateFuncPtr)();

public:
   static CreateInProcessSessionFuncPtr CreateInProcessSession;
   static StartThriftSocketServerFuncPtr StartThriftSocketServer;
   static CreateThriftSocketSessionFuncPtr CreateThriftSocketSession;
   static StartThriftNamedPipeServerFuncPtr StartThriftNamedPipeServer;
   static CreateThriftNamedPipeSessionFuncPtr CreateThriftNamedPipeSession;
   static StartThriftSharedMemoryServerFuncPtr StartThriftSharedMemoryServer;
   static CreateThriftSharedMemorySessionFuncPtr CreateThriftSharedMemorySession;
   static BindCustomImplementationFuncPtr BindCustomImplementation;
   static CreateCustomSessionFuncPtr CreateCustomSession;
   static IsSessionValidFuncPtr IsSessionValid;
   static CloseSessionFuncPtr CloseSession;
   static IsInitializedFuncPtr IsInitialized;
   static InitializeFuncPtr Initialize;
   static CleanupFuncPtr Cleanup;
   static ShutdownFuncPtr Shutdown;
   static StartPerformanceMonitorProfileFuncPtr StartPerformanceMonitorProfile;
   static StopPerformanceMonitorProfileFuncPtr StopPerformanceMonitorProfile;
   static GetEnvIntFuncPtr GetEnvInt;
   static GetSessionEnvIntFuncPtr GetSessionEnvInt;
   static GetServerEnvIntFuncPtr GetServerEnvInt;
   static GetServerEnvStringFuncPtr GetServerEnvString;
   static GetServerEnvVarCountFuncPtr GetServerEnvVarCount;
   static GetServerEnvVarListFuncPtr GetServerEnvVarList;
   static SetServerEnvIntFuncPtr SetServerEnvInt;
   static SetServerEnvStringFuncPtr SetServerEnvString;
   static GetStatusFuncPtr GetStatus;
   static GetStatusStringBufLengthFuncPtr GetStatusStringBufLength;
   static GetStatusStringFuncPtr GetStatusString;
   static ComposeNodeCookResultFuncPtr ComposeNodeCookResult;
   static GetComposedNodeCookResultFuncPtr GetComposedNodeCookResult;
   static GetNodeCookResultLengthFuncPtr GetNodeCookResultLength;
   static GetNodeCookResultFuncPtr GetNodeCookResult;
   static GetMessageNodeCountFuncPtr GetMessageNodeCount;
   static GetMessageNodeIdsFuncPtr GetMessageNodeIds;
   static CheckForSpecificErrorsFuncPtr CheckForSpecificErrors;
   static ClearConnectionErrorFuncPtr ClearConnectionError;
   static GetConnectionErrorLengthFuncPtr GetConnectionErrorLength;
   static GetConnectionErrorFuncPtr GetConnectionError;
   static GetCookingTotalCountFuncPtr GetCookingTotalCount;
   static GetCookingCurrentCountFuncPtr GetCookingCurrentCount;
   static InterruptFuncPtr Interrupt;
   static ConvertTransformFuncPtr ConvertTransform;
   static ConvertMatrixToQuatFuncPtr ConvertMatrixToQuat;
   static ConvertMatrixToEulerFuncPtr ConvertMatrixToEuler;
   static ConvertTransformQuatToMatrixFuncPtr ConvertTransformQuatToMatrix;
   static ConvertTransformEulerToMatrixFuncPtr ConvertTransformEulerToMatrix;
   static PythonThreadInterpreterLockFuncPtr PythonThreadInterpreterLock;
   static GetStringBufLengthFuncPtr GetStringBufLength;
   static GetStringFuncPtr GetString;
   static SetCustomStringFuncPtr SetCustomString;
   static RemoveCustomStringFuncPtr RemoveCustomString;
   static GetStringBatchSizeFuncPtr GetStringBatchSize;
   static GetStringBatchFuncPtr GetStringBatch;
   static GetTimeFuncPtr GetTime;
   static SetTimeFuncPtr SetTime;
   static GetUseHoudiniTimeFuncPtr GetUseHoudiniTime;
   static SetUseHoudiniTimeFuncPtr SetUseHoudiniTime;
   static GetTimelineOptionsFuncPtr GetTimelineOptions;
   static SetTimelineOptionsFuncPtr SetTimelineOptions;
   static GetCompositorOptionsFuncPtr GetCompositorOptions;
   static SetCompositorOptionsFuncPtr SetCompositorOptions;
   static LoadAssetLibraryFromFileFuncPtr LoadAssetLibraryFromFile;
   static LoadAssetLibraryFromMemoryFuncPtr LoadAssetLibraryFromMemory;
   static GetAvailableAssetCountFuncPtr GetAvailableAssetCount;
   static GetAvailableAssetsFuncPtr GetAvailableAssets;
   static GetAssetInfoFuncPtr GetAssetInfo;
   static GetAssetDefinitionParmCountsFuncPtr GetAssetDefinitionParmCounts;
   static GetAssetDefinitionParmInfosFuncPtr GetAssetDefinitionParmInfos;
   static GetAssetDefinitionParmValuesFuncPtr GetAssetDefinitionParmValues;
   static GetLoadedAssetLibraryCountFuncPtr GetLoadedAssetLibraryCount;
   static GetAssetLibraryIdsFuncPtr GetAssetLibraryIds;
   static GetAssetLibraryFilePathFuncPtr GetAssetLibraryFilePath;
   static LoadHIPFileFuncPtr LoadHIPFile;
   static MergeHIPFileFuncPtr MergeHIPFile;
   static SaveHIPFileFuncPtr SaveHIPFile;
   static GetHIPFileNodeCountFuncPtr GetHIPFileNodeCount;
   static GetHIPFileNodeIdsFuncPtr GetHIPFileNodeIds;
   static IsNodeValidFuncPtr IsNodeValid;
   static GetNodeInfoFuncPtr GetNodeInfo;
   static GetNodePathFuncPtr GetNodePath;
   static GetManagerNodeIdFuncPtr GetManagerNodeId;
   static ComposeChildNodeListFuncPtr ComposeChildNodeList;
   static GetComposedChildNodeListFuncPtr GetComposedChildNodeList;
   static CreateNodeFuncPtr CreateNode;
   static CreateInputNodeFuncPtr CreateInputNode;
   static CreateInputCurveNodeFuncPtr CreateInputCurveNode;
   static CreateHeightFieldInputFuncPtr CreateHeightFieldInput;
   static CreateHeightfieldInputVolumeNodeFuncPtr CreateHeightfieldInputVolumeNode;
   static CookNodeFuncPtr CookNode;
   static DeleteNodeFuncPtr DeleteNode;
   static RenameNodeFuncPtr RenameNode;
   static ConnectNodeInputFuncPtr ConnectNodeInput;
   static DisconnectNodeInputFuncPtr DisconnectNodeInput;
   static QueryNodeInputFuncPtr QueryNodeInput;
   static GetNodeInputNameFuncPtr GetNodeInputName;
   static DisconnectNodeOutputsAtFuncPtr DisconnectNodeOutputsAt;
   static QueryNodeOutputConnectedCountFuncPtr QueryNodeOutputConnectedCount;
   static QueryNodeOutputConnectedNodesFuncPtr QueryNodeOutputConnectedNodes;
   static GetNodeOutputNameFuncPtr GetNodeOutputName;
   static GetNodeFromPathFuncPtr GetNodeFromPath;
   static GetOutputNodeIdFuncPtr GetOutputNodeId;
   static GetParametersFuncPtr GetParameters;
   static GetParmInfoFuncPtr GetParmInfo;
   static GetParmIdFromNameFuncPtr GetParmIdFromName;
   static GetParmInfoFromNameFuncPtr GetParmInfoFromName;
   static GetParmTagNameFuncPtr GetParmTagName;
   static GetParmTagValueFuncPtr GetParmTagValue;
   static ParmHasTagFuncPtr ParmHasTag;
   static ParmHasExpressionFuncPtr ParmHasExpression;
   static GetParmWithTagFuncPtr GetParmWithTag;
   static GetParmExpressionFuncPtr GetParmExpression;
   static RevertParmToDefaultFuncPtr RevertParmToDefault;
   static RevertParmToDefaultsFuncPtr RevertParmToDefaults;
   static SetParmExpressionFuncPtr SetParmExpression;
   static RemoveParmExpressionFuncPtr RemoveParmExpression;
   static GetParmIntValueFuncPtr GetParmIntValue;
   static GetParmIntValuesFuncPtr GetParmIntValues;
   static GetParmFloatValueFuncPtr GetParmFloatValue;
   static GetParmFloatValuesFuncPtr GetParmFloatValues;
   static GetParmStringValueFuncPtr GetParmStringValue;
   static GetParmStringValuesFuncPtr GetParmStringValues;
   static GetParmNodeValueFuncPtr GetParmNodeValue;
   static GetParmFileFuncPtr GetParmFile;
   static GetParmChoiceListsFuncPtr GetParmChoiceLists;
   static SetParmIntValueFuncPtr SetParmIntValue;
   static SetParmIntValuesFuncPtr SetParmIntValues;
   static SetParmFloatValueFuncPtr SetParmFloatValue;
   static SetParmFloatValuesFuncPtr SetParmFloatValues;
   static SetParmStringValueFuncPtr SetParmStringValue;
   static SetParmNodeValueFuncPtr SetParmNodeValue;
   static InsertMultiparmInstanceFuncPtr InsertMultiparmInstance;
   static RemoveMultiparmInstanceFuncPtr RemoveMultiparmInstance;
   static GetHandleInfoFuncPtr GetHandleInfo;
   static GetHandleBindingInfoFuncPtr GetHandleBindingInfo;
   static GetPresetBufLengthFuncPtr GetPresetBufLength;
   static GetPresetFuncPtr GetPreset;
   static SetPresetFuncPtr SetPreset;
   static GetPresetCountFuncPtr GetPresetCount;
   static GetPresetNamesFuncPtr GetPresetNames;
   static GetObjectInfoFuncPtr GetObjectInfo;
   static GetObjectTransformFuncPtr GetObjectTransform;
   static ComposeObjectListFuncPtr ComposeObjectList;
   static GetComposedObjectListFuncPtr GetComposedObjectList;
   static GetComposedObjectTransformsFuncPtr GetComposedObjectTransforms;
   static GetInstancedObjectIdsFuncPtr GetInstancedObjectIds;
   static GetInstanceTransformsOnPartFuncPtr GetInstanceTransformsOnPart;
   static SetObjectTransformFuncPtr SetObjectTransform;
   static GetDisplayGeoInfoFuncPtr GetDisplayGeoInfo;
   static GetOutputGeoCountFuncPtr GetOutputGeoCount;
   static GetOutputGeoInfosFuncPtr GetOutputGeoInfos;
   static GetGeoInfoFuncPtr GetGeoInfo;
   static GetPartInfoFuncPtr GetPartInfo;
   static GetEdgeCountOfEdgeGroupFuncPtr GetEdgeCountOfEdgeGroup;
   static GetFaceCountsFuncPtr GetFaceCounts;
   static GetVertexListFuncPtr GetVertexList;
   static GetAttributeInfoFuncPtr GetAttributeInfo;
   static GetAttributeNamesFuncPtr GetAttributeNames;
   static GetAttributeIntDataFuncPtr GetAttributeIntData;
   static GetAttributeIntArrayDataFuncPtr GetAttributeIntArrayData;
   static GetAttributeUInt8DataFuncPtr GetAttributeUInt8Data;
   static GetAttributeUInt8ArrayDataFuncPtr GetAttributeUInt8ArrayData;
   static GetAttributeInt8DataFuncPtr GetAttributeInt8Data;
   static GetAttributeInt8ArrayDataFuncPtr GetAttributeInt8ArrayData;
   static GetAttributeInt16DataFuncPtr GetAttributeInt16Data;
   static GetAttributeInt16ArrayDataFuncPtr GetAttributeInt16ArrayData;
   static GetAttributeInt64DataFuncPtr GetAttributeInt64Data;
   static GetAttributeInt64ArrayDataFuncPtr GetAttributeInt64ArrayData;
   static GetAttributeFloatDataFuncPtr GetAttributeFloatData;
   static GetAttributeFloatArrayDataFuncPtr GetAttributeFloatArrayData;
   static GetAttributeFloat64DataFuncPtr GetAttributeFloat64Data;
   static GetAttributeFloat64ArrayDataFuncPtr GetAttributeFloat64ArrayData;
   static GetAttributeStringDataFuncPtr GetAttributeStringData;
   static GetAttributeStringArrayDataFuncPtr GetAttributeStringArrayData;
   static GetAttributeDictionaryDataFuncPtr GetAttributeDictionaryData;
   static GetAttributeDictionaryArrayDataFuncPtr GetAttributeDictionaryArrayData;
   static GetAttributeIntDataAsyncFuncPtr GetAttributeIntDataAsync;
   static GetAttributeUInt8DataAsyncFuncPtr GetAttributeUInt8DataAsync;
   static GetAttributeInt8DataAsyncFuncPtr GetAttributeInt8DataAsync;
   static GetAttributeInt16DataAsyncFuncPtr GetAttributeInt16DataAsync;
   static GetAttributeInt64DataAsyncFuncPtr GetAttributeInt64DataAsync;
   static GetAttributeFloatDataAsyncFuncPtr GetAttributeFloatDataAsync;
   static GetAttributeFloat64DataAsyncFuncPtr GetAttributeFloat64DataAsync;
   static GetAttributeStringDataAsyncFuncPtr GetAttributeStringDataAsync;
   static GetAttributeDictionaryDataAsyncFuncPtr GetAttributeDictionaryDataAsync;
   static GetAttributeIntArrayDataAsyncFuncPtr GetAttributeIntArrayDataAsync;
   static GetAttributeUInt8ArrayDataAsyncFuncPtr GetAttributeUInt8ArrayDataAsync;
   static GetAttributeInt8ArrayDataAsyncFuncPtr GetAttributeInt8ArrayDataAsync;
   static GetAttributeInt16ArrayDataAsyncFuncPtr GetAttributeInt16ArrayDataAsync;
   static GetAttributeInt64ArrayDataAsyncFuncPtr GetAttributeInt64ArrayDataAsync;
   static GetAttributeFloatArrayDataAsyncFuncPtr GetAttributeFloatArrayDataAsync;
   static GetAttributeFloat64ArrayDataAsyncFuncPtr GetAttributeFloat64ArrayDataAsync;
   static GetAttributeStringArrayDataAsyncFuncPtr GetAttributeStringArrayDataAsync;
   static GetAttributeDictionaryArrayDataAsyncFuncPtr GetAttributeDictionaryArrayDataAsync;
   static GetJobStatusFuncPtr GetJobStatus;
   static GetGroupNamesFuncPtr GetGroupNames;
   static GetGroupMembershipFuncPtr GetGroupMembership;
   static GetGroupCountOnPackedInstancePartFuncPtr GetGroupCountOnPackedInstancePart;
   static GetGroupNamesOnPackedInstancePartFuncPtr GetGroupNamesOnPackedInstancePart;
   static GetGroupMembershipOnPackedInstancePartFuncPtr GetGroupMembershipOnPackedInstancePart;
   static GetInstancedPartIdsFuncPtr GetInstancedPartIds;
   static GetInstancerPartTransformsFuncPtr GetInstancerPartTransforms;
   static SetPartInfoFuncPtr SetPartInfo;
   static SetFaceCountsFuncPtr SetFaceCounts;
   static SetVertexListFuncPtr SetVertexList;
   static AddAttributeFuncPtr AddAttribute;
   static DeleteAttributeFuncPtr DeleteAttribute;
   static SetAttributeIntDataFuncPtr SetAttributeIntData;
   static SetAttributeUInt8DataFuncPtr SetAttributeUInt8Data;
   static SetAttributeInt8DataFuncPtr SetAttributeInt8Data;
   static SetAttributeInt16DataFuncPtr SetAttributeInt16Data;
   static SetAttributeInt64DataFuncPtr SetAttributeInt64Data;
   static SetAttributeFloatDataFuncPtr SetAttributeFloatData;
   static SetAttributeFloat64DataFuncPtr SetAttributeFloat64Data;
   static SetAttributeStringDataFuncPtr SetAttributeStringData;
   static SetAttributeIndexedStringDataFuncPtr SetAttributeIndexedStringData;
   static SetAttributeStringUniqueDataFuncPtr SetAttributeStringUniqueData;
   static SetAttributeIntUniqueDataFuncPtr SetAttributeIntUniqueData;
   static SetAttributeUInt8UniqueDataFuncPtr SetAttributeUInt8UniqueData;
   static SetAttributeInt8UniqueDataFuncPtr SetAttributeInt8UniqueData;
   static SetAttributeInt16UniqueDataFuncPtr SetAttributeInt16UniqueData;
   static SetAttributeInt64UniqueDataFuncPtr SetAttributeInt64UniqueData;
   static SetAttributeFloatUniqueDataFuncPtr SetAttributeFloatUniqueData;
   static SetAttributeFloat64UniqueDataFuncPtr SetAttributeFloat64UniqueData;
   static SetAttributeDictionaryDataFuncPtr SetAttributeDictionaryData;
   static SetAttributeIntArrayDataFuncPtr SetAttributeIntArrayData;
   static SetAttributeUInt8ArrayDataFuncPtr SetAttributeUInt8ArrayData;
   static SetAttributeInt8ArrayDataFuncPtr SetAttributeInt8ArrayData;
   static SetAttributeInt16ArrayDataFuncPtr SetAttributeInt16ArrayData;
   static SetAttributeInt64ArrayDataFuncPtr SetAttributeInt64ArrayData;
   static SetAttributeFloatArrayDataFuncPtr SetAttributeFloatArrayData;
   static SetAttributeFloat64ArrayDataFuncPtr SetAttributeFloat64ArrayData;
   static SetAttributeStringArrayDataFuncPtr SetAttributeStringArrayData;
   static SetAttributeDictionaryArrayDataFuncPtr SetAttributeDictionaryArrayData;
   static SetAttributeIntDataAsyncFuncPtr SetAttributeIntDataAsync;
   static SetAttributeUInt8DataAsyncFuncPtr SetAttributeUInt8DataAsync;
   static SetAttributeInt8DataAsyncFuncPtr SetAttributeInt8DataAsync;
   static SetAttributeInt16DataAsyncFuncPtr SetAttributeInt16DataAsync;
   static SetAttributeInt64DataAsyncFuncPtr SetAttributeInt64DataAsync;
   static SetAttributeFloatDataAsyncFuncPtr SetAttributeFloatDataAsync;
   static SetAttributeFloat64DataAsyncFuncPtr SetAttributeFloat64DataAsync;
   static SetAttributeStringDataAsyncFuncPtr SetAttributeStringDataAsync;
   static SetAttributeIndexedStringDataAsyncFuncPtr SetAttributeIndexedStringDataAsync;
   static SetAttributeStringUniqueDataAsyncFuncPtr SetAttributeStringUniqueDataAsync;
   static SetAttributeIntUniqueDataAsyncFuncPtr SetAttributeIntUniqueDataAsync;
   static SetAttributeUInt8UniqueDataAsyncFuncPtr SetAttributeUInt8UniqueDataAsync;
   static SetAttributeInt8UniqueDataAsyncFuncPtr SetAttributeInt8UniqueDataAsync;
   static SetAttributeInt16UniqueDataAsyncFuncPtr SetAttributeInt16UniqueDataAsync;
   static SetAttributeInt64UniqueDataAsyncFuncPtr SetAttributeInt64UniqueDataAsync;
   static SetAttributeFloatUniqueDataAsyncFuncPtr SetAttributeFloatUniqueDataAsync;
   static SetAttributeFloat64UniqueDataAsyncFuncPtr SetAttributeFloat64UniqueDataAsync;
   static SetAttributeDictionaryDataAsyncFuncPtr SetAttributeDictionaryDataAsync;
   static SetAttributeIntArrayDataAsyncFuncPtr SetAttributeIntArrayDataAsync;
   static SetAttributeUInt8ArrayDataAsyncFuncPtr SetAttributeUInt8ArrayDataAsync;
   static SetAttributeInt8ArrayDataAsyncFuncPtr SetAttributeInt8ArrayDataAsync;
   static SetAttributeInt16ArrayDataAsyncFuncPtr SetAttributeInt16ArrayDataAsync;
   static SetAttributeInt64ArrayDataAsyncFuncPtr SetAttributeInt64ArrayDataAsync;
   static SetAttributeFloatArrayDataAsyncFuncPtr SetAttributeFloatArrayDataAsync;
   static SetAttributeFloat64ArrayDataAsyncFuncPtr SetAttributeFloat64ArrayDataAsync;
   static SetAttributeStringArrayDataAsyncFuncPtr SetAttributeStringArrayDataAsync;
   static SetAttributeDictionaryArrayDataAsyncFuncPtr SetAttributeDictionaryArrayDataAsync;
   static AddGroupFuncPtr AddGroup;
   static DeleteGroupFuncPtr DeleteGroup;
   static SetGroupMembershipFuncPtr SetGroupMembership;
   static CommitGeoFuncPtr CommitGeo;
   static RevertGeoFuncPtr RevertGeo;
   static GetMaterialNodeIdsOnFacesFuncPtr GetMaterialNodeIdsOnFaces;
   static GetMaterialInfoFuncPtr GetMaterialInfo;
   static RenderCOPToImageFuncPtr RenderCOPToImage;
   static RenderTextureToImageFuncPtr RenderTextureToImage;
   static GetImageInfoFuncPtr GetImageInfo;
   static SetImageInfoFuncPtr SetImageInfo;
   static GetImagePlaneCountFuncPtr GetImagePlaneCount;
   static GetImagePlanesFuncPtr GetImagePlanes;
   static ExtractImageToFileFuncPtr ExtractImageToFile;
   static GetImageFilePathFuncPtr GetImageFilePath;
   static ExtractImageToMemoryFuncPtr ExtractImageToMemory;
   static GetImageMemoryBufferFuncPtr GetImageMemoryBuffer;
   static GetSupportedImageFileFormatCountFuncPtr GetSupportedImageFileFormatCount;
   static GetSupportedImageFileFormatsFuncPtr GetSupportedImageFileFormats;
   static SetAnimCurveFuncPtr SetAnimCurve;
   static SetTransformAnimCurveFuncPtr SetTransformAnimCurve;
   static ResetSimulationFuncPtr ResetSimulation;
   static GetVolumeInfoFuncPtr GetVolumeInfo;
   static GetFirstVolumeTileFuncPtr GetFirstVolumeTile;
   static GetNextVolumeTileFuncPtr GetNextVolumeTile;
   static GetVolumeVoxelFloatDataFuncPtr GetVolumeVoxelFloatData;
   static GetVolumeTileFloatDataFuncPtr GetVolumeTileFloatData;
   static GetVolumeVoxelIntDataFuncPtr GetVolumeVoxelIntData;
   static GetVolumeTileIntDataFuncPtr GetVolumeTileIntData;
   static GetHeightFieldDataFuncPtr GetHeightFieldData;
   static SetVolumeInfoFuncPtr SetVolumeInfo;
   static SetVolumeTileFloatDataFuncPtr SetVolumeTileFloatData;
   static SetVolumeTileIntDataFuncPtr SetVolumeTileIntData;
   static SetVolumeVoxelFloatDataFuncPtr SetVolumeVoxelFloatData;
   static SetVolumeVoxelIntDataFuncPtr SetVolumeVoxelIntData;
   static GetVolumeBoundsFuncPtr GetVolumeBounds;
   static SetHeightFieldDataFuncPtr SetHeightFieldData;
   static GetVolumeVisualInfoFuncPtr GetVolumeVisualInfo;
   static GetCurveInfoFuncPtr GetCurveInfo;
   static GetCurveCountsFuncPtr GetCurveCounts;
   static GetCurveOrdersFuncPtr GetCurveOrders;
   static GetCurveKnotsFuncPtr GetCurveKnots;
   static SetCurveInfoFuncPtr SetCurveInfo;
   static SetCurveCountsFuncPtr SetCurveCounts;
   static SetCurveOrdersFuncPtr SetCurveOrders;
   static SetCurveKnotsFuncPtr SetCurveKnots;
   static GetInputCurveInfoFuncPtr GetInputCurveInfo;
   static SetInputCurveInfoFuncPtr SetInputCurveInfo;
   static SetInputCurvePositionsFuncPtr SetInputCurvePositions;
   static SetInputCurvePositionsRotationsScalesFuncPtr SetInputCurvePositionsRotationsScales;
   static GetBoxInfoFuncPtr GetBoxInfo;
   static GetSphereInfoFuncPtr GetSphereInfo;
   static GetActiveCacheCountFuncPtr GetActiveCacheCount;
   static GetActiveCacheNamesFuncPtr GetActiveCacheNames;
   static GetCachePropertyFuncPtr GetCacheProperty;
   static SetCachePropertyFuncPtr SetCacheProperty;
   static SaveGeoToFileFuncPtr SaveGeoToFile;
   static LoadGeoFromFileFuncPtr LoadGeoFromFile;
   static SaveNodeToFileFuncPtr SaveNodeToFile;
   static LoadNodeFromFileFuncPtr LoadNodeFromFile;
   static GetGeoSizeFuncPtr GetGeoSize;
   static SaveGeoToMemoryFuncPtr SaveGeoToMemory;
   static LoadGeoFromMemoryFuncPtr LoadGeoFromMemory;
   static SetNodeDisplayFuncPtr SetNodeDisplay;
   static GetTotalCookCountFuncPtr GetTotalCookCount;
   static SetSessionSyncFuncPtr SetSessionSync;
   static GetViewportFuncPtr GetViewport;
   static SetViewportFuncPtr SetViewport;
   static GetSessionSyncInfoFuncPtr GetSessionSyncInfo;
   static SetSessionSyncInfoFuncPtr SetSessionSyncInfo;
   static GetPDGGraphContextsFuncPtr GetPDGGraphContexts;
   static GetPDGGraphContextsCountFuncPtr GetPDGGraphContextsCount;
   static GetPDGGraphContextIdFuncPtr GetPDGGraphContextId;
   static CookPDGFuncPtr CookPDG;
   static CookPDGAllOutputsFuncPtr CookPDGAllOutputs;
   static GetPDGEventsFuncPtr GetPDGEvents;
   static GetPDGStateFuncPtr GetPDGState;
   static CreateWorkItemFuncPtr CreateWorkItem;
   static GetWorkItemInfoFuncPtr GetWorkItemInfo;
   static SetWorkItemIntAttributeFuncPtr SetWorkItemIntAttribute;
   static SetWorkItemFloatAttributeFuncPtr SetWorkItemFloatAttribute;
   static SetWorkItemStringAttributeFuncPtr SetWorkItemStringAttribute;
   static CommitWorkItemsFuncPtr CommitWorkItems;
   static GetNumWorkItemsFuncPtr GetNumWorkItems;
   static GetWorkItemsFuncPtr GetWorkItems;
   static GetWorkItemAttributeSizeFuncPtr GetWorkItemAttributeSize;
   static GetWorkItemIntAttributeFuncPtr GetWorkItemIntAttribute;
   static GetWorkItemFloatAttributeFuncPtr GetWorkItemFloatAttribute;
   static GetWorkItemStringAttributeFuncPtr GetWorkItemStringAttribute;
   static GetWorkItemOutputFilesFuncPtr GetWorkItemOutputFiles;
   static DirtyPDGNodeFuncPtr DirtyPDGNode;
   static PausePDGCookFuncPtr PausePDGCook;
   static CancelPDGCookFuncPtr CancelPDGCook;
   static SessionInfo_InitFuncPtr SessionInfo_Init;
   static SessionInfo_CreateFuncPtr SessionInfo_Create;
   static ThriftServerOptions_InitFuncPtr ThriftServerOptions_Init;
   static ThriftServerOptions_CreateFuncPtr ThriftServerOptions_Create;
   static TimelineOptions_InitFuncPtr TimelineOptions_Init;
   static TimelineOptions_CreateFuncPtr TimelineOptions_Create;
   static CompositorOptions_InitFuncPtr CompositorOptions_Init;
   static CompositorOptions_CreateFuncPtr CompositorOptions_Create;
   static AssetInfo_InitFuncPtr AssetInfo_Init;
   static AssetInfo_CreateFuncPtr AssetInfo_Create;
   static CookOptions_InitFuncPtr CookOptions_Init;
   static CookOptions_CreateFuncPtr CookOptions_Create;
   static CookOptions_AreEqualFuncPtr CookOptions_AreEqual;
   static NodeInfo_InitFuncPtr NodeInfo_Init;
   static NodeInfo_CreateFuncPtr NodeInfo_Create;
   static ParmInfo_InitFuncPtr ParmInfo_Init;
   static ParmInfo_CreateFuncPtr ParmInfo_Create;
   static ParmInfo_IsIntFuncPtr ParmInfo_IsInt;
   static ParmInfo_IsFloatFuncPtr ParmInfo_IsFloat;
   static ParmInfo_IsStringFuncPtr ParmInfo_IsString;
   static ParmInfo_IsPathFuncPtr ParmInfo_IsPath;
   static ParmInfo_IsNodeFuncPtr ParmInfo_IsNode;
   static ParmInfo_IsNonValueFuncPtr ParmInfo_IsNonValue;
   static ParmInfo_GetIntValueCountFuncPtr ParmInfo_GetIntValueCount;
   static ParmInfo_GetFloatValueCountFuncPtr ParmInfo_GetFloatValueCount;
   static ParmInfo_GetStringValueCountFuncPtr ParmInfo_GetStringValueCount;
   static ParmChoiceInfo_InitFuncPtr ParmChoiceInfo_Init;
   static ParmChoiceInfo_CreateFuncPtr ParmChoiceInfo_Create;
   static HandleInfo_InitFuncPtr HandleInfo_Init;
   static HandleInfo_CreateFuncPtr HandleInfo_Create;
   static HandleBindingInfo_InitFuncPtr HandleBindingInfo_Init;
   static HandleBindingInfo_CreateFuncPtr HandleBindingInfo_Create;
   static ObjectInfo_InitFuncPtr ObjectInfo_Init;
   static ObjectInfo_CreateFuncPtr ObjectInfo_Create;
   static GeoInfo_InitFuncPtr GeoInfo_Init;
   static GeoInfo_CreateFuncPtr GeoInfo_Create;
   static GeoInfo_GetGroupCountByTypeFuncPtr GeoInfo_GetGroupCountByType;
   static PartInfo_InitFuncPtr PartInfo_Init;
   static PartInfo_CreateFuncPtr PartInfo_Create;
   static PartInfo_GetElementCountByAttributeOwnerFuncPtr PartInfo_GetElementCountByAttributeOwner;
   static PartInfo_GetElementCountByGroupTypeFuncPtr PartInfo_GetElementCountByGroupType;
   static PartInfo_GetAttributeCountByOwnerFuncPtr PartInfo_GetAttributeCountByOwner;
   static AttributeInfo_InitFuncPtr AttributeInfo_Init;
   static AttributeInfo_CreateFuncPtr AttributeInfo_Create;
   static MaterialInfo_InitFuncPtr MaterialInfo_Init;
   static MaterialInfo_CreateFuncPtr MaterialInfo_Create;
   static ImageFileFormat_InitFuncPtr ImageFileFormat_Init;
   static ImageFileFormat_CreateFuncPtr ImageFileFormat_Create;
   static ImageInfo_InitFuncPtr ImageInfo_Init;
   static ImageInfo_CreateFuncPtr ImageInfo_Create;
   static Keyframe_InitFuncPtr Keyframe_Init;
   static Keyframe_CreateFuncPtr Keyframe_Create;
   static VolumeInfo_InitFuncPtr VolumeInfo_Init;
   static VolumeInfo_CreateFuncPtr VolumeInfo_Create;
   static VolumeTileInfo_InitFuncPtr VolumeTileInfo_Init;
   static VolumeTileInfo_CreateFuncPtr VolumeTileInfo_Create;
   static CurveInfo_InitFuncPtr CurveInfo_Init;
   static CurveInfo_CreateFuncPtr CurveInfo_Create;
   static InputCurveInfo_InitFuncPtr InputCurveInfo_Init;
   static InputCurveInfo_CreateFuncPtr InputCurveInfo_Create;
   static Transform_InitFuncPtr Transform_Init;
   static Transform_CreateFuncPtr Transform_Create;
   static TransformEuler_InitFuncPtr TransformEuler_Init;
   static TransformEuler_CreateFuncPtr TransformEuler_Create;
   static Viewport_InitFuncPtr Viewport_Init;
   static Viewport_CreateFuncPtr Viewport_Create;
   static SessionSyncInfo_InitFuncPtr SessionSyncInfo_Init;
   static SessionSyncInfo_CreateFuncPtr SessionSyncInfo_Create;

public:
   static HAPI_Result CreateInProcessSessionEmptyStub(HAPI_Session *session, const HAPI_SessionInfo *session_info);
   static HAPI_Result StartThriftSocketServerEmptyStub(const HAPI_ThriftServerOptions *options, int port, HAPI_ProcessId *process_id, const char *log_file);
   static HAPI_Result CreateThriftSocketSessionEmptyStub(HAPI_Session *session, const char *host_name, int port, const HAPI_SessionInfo *session_info);
   static HAPI_Result StartThriftNamedPipeServerEmptyStub(const HAPI_ThriftServerOptions *options, const char *pipe_name, HAPI_ProcessId *process_id, const char *log_file);
   static HAPI_Result CreateThriftNamedPipeSessionEmptyStub(HAPI_Session *session, const char *pipe_name, const HAPI_SessionInfo *session_info);
   static HAPI_Result StartThriftSharedMemoryServerEmptyStub(const HAPI_ThriftServerOptions *options, const char *shared_mem_name, HAPI_ProcessId *process_id, const char *log_file);
   static HAPI_Result CreateThriftSharedMemorySessionEmptyStub(HAPI_Session *session, const char *shared_mem_name, const HAPI_SessionInfo *session_info);
   static HAPI_Result BindCustomImplementationEmptyStub(HAPI_SessionType session_type, const char *dll_path);
   static HAPI_Result CreateCustomSessionEmptyStub(HAPI_SessionType session_type, void *session_info, HAPI_Session *session);
   static HAPI_Result IsSessionValidEmptyStub(const HAPI_Session *session);
   static HAPI_Result CloseSessionEmptyStub(const HAPI_Session *session);
   static HAPI_Result IsInitializedEmptyStub(const HAPI_Session *session);
   static HAPI_Result InitializeEmptyStub(const HAPI_Session *session, const HAPI_CookOptions *cook_options, HAPI_Bool use_cooking_thread, int cooking_thread_stack_size, const char *houdini_environment_files, const char *otl_search_path, const char *dso_search_path, const char *image_dso_search_path, const char *audio_dso_search_path);
   static HAPI_Result CleanupEmptyStub(const HAPI_Session *session);
   static HAPI_Result ShutdownEmptyStub(const HAPI_Session *session);
   static HAPI_Result StartPerformanceMonitorProfileEmptyStub(const HAPI_Session *session, const char *title, int *profile_id);
   static HAPI_Result StopPerformanceMonitorProfileEmptyStub(const HAPI_Session *session, int profile_id, const char *file_path);
   static HAPI_Result GetEnvIntEmptyStub(HAPI_EnvIntType int_type, int *value);
   static HAPI_Result GetSessionEnvIntEmptyStub(const HAPI_Session *session, HAPI_SessionEnvIntType int_type, int *value);
   static HAPI_Result GetServerEnvIntEmptyStub(const HAPI_Session *session, const char *variable_name, int *value);
   static HAPI_Result GetServerEnvStringEmptyStub(const HAPI_Session *session, const char *variable_name, HAPI_StringHandle *value);
   static HAPI_Result GetServerEnvVarCountEmptyStub(const HAPI_Session *session, int *env_count);
   static HAPI_Result GetServerEnvVarListEmptyStub(const HAPI_Session *session, HAPI_StringHandle *values_array, int start, int length);
   static HAPI_Result SetServerEnvIntEmptyStub(const HAPI_Session *session, const char *variable_name, int value);
   static HAPI_Result SetServerEnvStringEmptyStub(const HAPI_Session *session, const char *variable_name, const char *value);
   static HAPI_Result GetStatusEmptyStub(const HAPI_Session *session, HAPI_StatusType status_type, int *status);
   static HAPI_Result GetStatusStringBufLengthEmptyStub(const HAPI_Session *session, HAPI_StatusType status_type, HAPI_StatusVerbosity verbosity, int *buffer_length);
   static HAPI_Result GetStatusStringEmptyStub(const HAPI_Session *session, HAPI_StatusType status_type, char *string_value, int length);
   static HAPI_Result ComposeNodeCookResultEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_StatusVerbosity verbosity, int *buffer_length);
   static HAPI_Result GetComposedNodeCookResultEmptyStub(const HAPI_Session *session, char *string_value, int length);
   static HAPI_Result GetNodeCookResultLengthEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_StatusVerbosity verbosity, int *buffer_length);
   static HAPI_Result GetNodeCookResultEmptyStub(const HAPI_Session *session, char *string_value, int length);
   static HAPI_Result GetMessageNodeCountEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, int *count);
   static HAPI_Result GetMessageNodeIdsEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_NodeId *message_node_ids_array, int count);
   static HAPI_Result CheckForSpecificErrorsEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ErrorCodeBits errors_to_look_for, HAPI_ErrorCodeBits *errors_found);
   static HAPI_Result ClearConnectionErrorEmptyStub();
   static HAPI_Result GetConnectionErrorLengthEmptyStub(int *buffer_length);
   static HAPI_Result GetConnectionErrorEmptyStub(char *string_value, int length, HAPI_Bool clear);
   static HAPI_Result GetCookingTotalCountEmptyStub(const HAPI_Session *session, int *count);
   static HAPI_Result GetCookingCurrentCountEmptyStub(const HAPI_Session *session, int *count);
   static HAPI_Result InterruptEmptyStub(const HAPI_Session *session);
   static HAPI_Result ConvertTransformEmptyStub(const HAPI_Session *session, const HAPI_TransformEuler *transform_in, HAPI_RSTOrder rst_order, HAPI_XYZOrder rot_order, HAPI_TransformEuler *transform_out);
   static HAPI_Result ConvertMatrixToQuatEmptyStub(const HAPI_Session *session, const float *matrix, HAPI_RSTOrder rst_order, HAPI_Transform *transform_out);
   static HAPI_Result ConvertMatrixToEulerEmptyStub(const HAPI_Session *session, const float *matrix, HAPI_RSTOrder rst_order, HAPI_XYZOrder rot_order, HAPI_TransformEuler *transform_out);
   static HAPI_Result ConvertTransformQuatToMatrixEmptyStub(const HAPI_Session *session, const HAPI_Transform *transform, float *matrix);
   static HAPI_Result ConvertTransformEulerToMatrixEmptyStub(const HAPI_Session *session, const HAPI_TransformEuler *transform, float *matrix);
   static HAPI_Result PythonThreadInterpreterLockEmptyStub(const HAPI_Session *session, HAPI_Bool locked);
   static HAPI_Result GetStringBufLengthEmptyStub(const HAPI_Session *session, HAPI_StringHandle string_handle, int *buffer_length);
   static HAPI_Result GetStringEmptyStub(const HAPI_Session *session, HAPI_StringHandle string_handle, char *string_value, int length);
   static HAPI_Result SetCustomStringEmptyStub(const HAPI_Session *session, const char *string_value, HAPI_StringHandle *handle_value);
   static HAPI_Result RemoveCustomStringEmptyStub(const HAPI_Session *session, const HAPI_StringHandle string_handle);
   static HAPI_Result GetStringBatchSizeEmptyStub(const HAPI_Session *session, const int *string_handle_array, int string_handle_count, int *string_buffer_size);
   static HAPI_Result GetStringBatchEmptyStub(const HAPI_Session *session, char *char_buffer, int char_array_length);
   static HAPI_Result GetTimeEmptyStub(const HAPI_Session *session, float *time);
   static HAPI_Result SetTimeEmptyStub(const HAPI_Session *session, float time);
   static HAPI_Result GetUseHoudiniTimeEmptyStub(const HAPI_Session *session, HAPI_Bool *enabled);
   static HAPI_Result SetUseHoudiniTimeEmptyStub(const HAPI_Session *session, HAPI_Bool enabled);
   static HAPI_Result GetTimelineOptionsEmptyStub(const HAPI_Session *session, HAPI_TimelineOptions *timeline_options);
   static HAPI_Result SetTimelineOptionsEmptyStub(const HAPI_Session *session, const HAPI_TimelineOptions *timeline_options);
   static HAPI_Result GetCompositorOptionsEmptyStub(const HAPI_Session *session, HAPI_CompositorOptions *compositor_options);
   static HAPI_Result SetCompositorOptionsEmptyStub(const HAPI_Session *session, const HAPI_CompositorOptions *compositor_options);
   static HAPI_Result LoadAssetLibraryFromFileEmptyStub(const HAPI_Session *session, const char *file_path, HAPI_Bool allow_overwrite, HAPI_AssetLibraryId *library_id);
   static HAPI_Result LoadAssetLibraryFromMemoryEmptyStub(const HAPI_Session *session, const char *library_buffer, int library_buffer_length, HAPI_Bool allow_overwrite, HAPI_AssetLibraryId *library_id);
   static HAPI_Result GetAvailableAssetCountEmptyStub(const HAPI_Session *session, HAPI_AssetLibraryId library_id, int *asset_count);
   static HAPI_Result GetAvailableAssetsEmptyStub(const HAPI_Session *session, HAPI_AssetLibraryId library_id, HAPI_StringHandle *asset_names_array, int asset_count);
   static HAPI_Result GetAssetInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_AssetInfo *asset_info);
   static HAPI_Result GetAssetDefinitionParmCountsEmptyStub(const HAPI_Session *session, HAPI_AssetLibraryId library_id, const char *asset_name, int *parm_count, int *int_value_count, int *float_value_count, int *string_value_count, int *choice_value_count);
   static HAPI_Result GetAssetDefinitionParmInfosEmptyStub(const HAPI_Session *session, HAPI_AssetLibraryId library_id, const char *asset_name, HAPI_ParmInfo *parm_infos_array, int start, int length);
   static HAPI_Result GetAssetDefinitionParmValuesEmptyStub(const HAPI_Session *session, HAPI_AssetLibraryId library_id, const char *asset_name, int *int_values_array, int int_start, int int_length, float *float_values_array, int float_start, int float_length, HAPI_Bool string_evaluate, HAPI_StringHandle *string_values_array, int string_start, int string_length, HAPI_ParmChoiceInfo *choice_values_array, int choice_start, int choice_length);
   static HAPI_Result GetLoadedAssetLibraryCountEmptyStub(const HAPI_Session *session, int *count);
   static HAPI_Result GetAssetLibraryIdsEmptyStub(const HAPI_Session *session, HAPI_AssetLibraryId *asset_library_ids_array, int start, int length);
   static HAPI_Result GetAssetLibraryFilePathEmptyStub(const HAPI_Session *session, HAPI_AssetLibraryId asset_library_id, HAPI_StringHandle *file_path_sh);
   static HAPI_Result LoadHIPFileEmptyStub(const HAPI_Session *session, const char *file_name, HAPI_Bool cook_on_load);
   static HAPI_Result MergeHIPFileEmptyStub(const HAPI_Session *session, const char *file_name, HAPI_Bool cook_on_load, HAPI_HIPFileId *file_id);
   static HAPI_Result SaveHIPFileEmptyStub(const HAPI_Session *session, const char *file_path, HAPI_Bool lock_nodes);
   static HAPI_Result GetHIPFileNodeCountEmptyStub(const HAPI_Session *session, HAPI_HIPFileId id, int *count);
   static HAPI_Result GetHIPFileNodeIdsEmptyStub(const HAPI_Session *session, HAPI_HIPFileId id, HAPI_NodeId *node_ids, int length);
   static HAPI_Result IsNodeValidEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, int unique_node_id, HAPI_Bool *answer);
   static HAPI_Result GetNodeInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_NodeInfo *node_info);
   static HAPI_Result GetNodePathEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_NodeId relative_to_node_id, HAPI_StringHandle *path);
   static HAPI_Result GetManagerNodeIdEmptyStub(const HAPI_Session *session, HAPI_NodeType node_type, HAPI_NodeId *node_id);
   static HAPI_Result ComposeChildNodeListEmptyStub(const HAPI_Session *session, HAPI_NodeId parent_node_id, HAPI_NodeTypeBits node_type_filter, HAPI_NodeFlagsBits node_flags_filter, HAPI_Bool recursive, int *count);
   static HAPI_Result GetComposedChildNodeListEmptyStub(const HAPI_Session *session, HAPI_NodeId parent_node_id, HAPI_NodeId *child_node_ids_array, int count);
   static HAPI_Result CreateNodeEmptyStub(const HAPI_Session *session, HAPI_NodeId parent_node_id, const char *operator_name, const char *node_label, HAPI_Bool cook_on_creation, HAPI_NodeId *new_node_id);
   static HAPI_Result CreateInputNodeEmptyStub(const HAPI_Session *session, HAPI_NodeId parent_node_id, HAPI_NodeId *node_id, const char *name);
   static HAPI_Result CreateInputCurveNodeEmptyStub(const HAPI_Session *session, HAPI_NodeId parent_node_id, HAPI_NodeId *node_id, const char *name);
   static HAPI_Result CreateHeightFieldInputEmptyStub(const HAPI_Session *session, HAPI_NodeId parent_node_id, const char *name, int xsize, int ysize, float voxelsize, HAPI_HeightFieldSampling sampling, HAPI_NodeId *heightfield_node_id, HAPI_NodeId *height_node_id, HAPI_NodeId *mask_node_id, HAPI_NodeId *merge_node_id);
   static HAPI_Result CreateHeightfieldInputVolumeNodeEmptyStub(const HAPI_Session *session, HAPI_NodeId parent_node_id, HAPI_NodeId *new_node_id, const char *name, int xsize, int ysize, float voxelsize);
   static HAPI_Result CookNodeEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const HAPI_CookOptions *cook_options);
   static HAPI_Result DeleteNodeEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id);
   static HAPI_Result RenameNodeEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *new_name);
   static HAPI_Result ConnectNodeInputEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, int input_index, HAPI_NodeId node_id_to_connect, int output_index);
   static HAPI_Result DisconnectNodeInputEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, int input_index);
   static HAPI_Result QueryNodeInputEmptyStub(const HAPI_Session *session, HAPI_NodeId node_to_query, int input_index, HAPI_NodeId *connected_node_id);
   static HAPI_Result GetNodeInputNameEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, int input_idx, HAPI_StringHandle *name);
   static HAPI_Result DisconnectNodeOutputsAtEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, int output_index);
   static HAPI_Result QueryNodeOutputConnectedCountEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, int output_idx, HAPI_Bool into_subnets, HAPI_Bool through_dots, int *connected_count);
   static HAPI_Result QueryNodeOutputConnectedNodesEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, int output_idx, HAPI_Bool into_subnets, HAPI_Bool through_dots, HAPI_NodeId *connected_node_ids_array, int start, int length);
   static HAPI_Result GetNodeOutputNameEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, int output_idx, HAPI_StringHandle *name);
   static HAPI_Result GetNodeFromPathEmptyStub(const HAPI_Session *session, const HAPI_NodeId parent_node_id, const char *path, HAPI_NodeId *node_id);
   static HAPI_Result GetOutputNodeIdEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, int output, HAPI_NodeId *output_node_id);
   static HAPI_Result GetParametersEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmInfo *parm_infos_array, int start, int length);
   static HAPI_Result GetParmInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmId parm_id, HAPI_ParmInfo *parm_info);
   static HAPI_Result GetParmIdFromNameEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, HAPI_ParmId *parm_id);
   static HAPI_Result GetParmInfoFromNameEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, HAPI_ParmInfo *parm_info);
   static HAPI_Result GetParmTagNameEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int tag_index, HAPI_StringHandle *tag_name);
   static HAPI_Result GetParmTagValueEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmId parm_id, const char *tag_name, HAPI_StringHandle *tag_value);
   static HAPI_Result ParmHasTagEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmId parm_id, const char *tag_name, HAPI_Bool *has_tag);
   static HAPI_Result ParmHasExpressionEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, int index, HAPI_Bool *has_expression);
   static HAPI_Result GetParmWithTagEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *tag_name, HAPI_ParmId *parm_id);
   static HAPI_Result GetParmExpressionEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, int index, HAPI_StringHandle *value);
   static HAPI_Result RevertParmToDefaultEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, int index);
   static HAPI_Result RevertParmToDefaultsEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name);
   static HAPI_Result SetParmExpressionEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *value, HAPI_ParmId parm_id, int index);
   static HAPI_Result RemoveParmExpressionEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int index);
   static HAPI_Result GetParmIntValueEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, int index, int *value);
   static HAPI_Result GetParmIntValuesEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, int *values_array, int start, int length);
   static HAPI_Result GetParmFloatValueEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, int index, float *value);
   static HAPI_Result GetParmFloatValuesEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, float *values_array, int start, int length);
   static HAPI_Result GetParmStringValueEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, int index, HAPI_Bool evaluate, HAPI_StringHandle *value);
   static HAPI_Result GetParmStringValuesEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_Bool evaluate, HAPI_StringHandle *values_array, int start, int length);
   static HAPI_Result GetParmNodeValueEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, HAPI_NodeId *value);
   static HAPI_Result GetParmFileEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, const char *destination_directory, const char *destination_file_name);
   static HAPI_Result GetParmChoiceListsEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmChoiceInfo *parm_choices_array, int start, int length);
   static HAPI_Result SetParmIntValueEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, int index, int value);
   static HAPI_Result SetParmIntValuesEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const int *values_array, int start, int length);
   static HAPI_Result SetParmFloatValueEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, int index, float value);
   static HAPI_Result SetParmFloatValuesEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const float *values_array, int start, int length);
   static HAPI_Result SetParmStringValueEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *value, HAPI_ParmId parm_id, int index);
   static HAPI_Result SetParmNodeValueEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *parm_name, HAPI_NodeId value);
   static HAPI_Result InsertMultiparmInstanceEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int instance_position);
   static HAPI_Result RemoveMultiparmInstanceEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int instance_position);
   static HAPI_Result GetHandleInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_HandleInfo *handle_infos_array, int start, int length);
   static HAPI_Result GetHandleBindingInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, int handle_index, HAPI_HandleBindingInfo *handle_binding_infos_array, int start, int length);
   static HAPI_Result GetPresetBufLengthEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PresetType preset_type, const char *preset_name, int *buffer_length);
   static HAPI_Result GetPresetEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, char *buffer, int buffer_length);
   static HAPI_Result SetPresetEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PresetType preset_type, const char *preset_name, const char *buffer, int buffer_length);
   static HAPI_Result GetPresetCountEmptyStub(const HAPI_Session *session, const char *buffer, int buffer_length, int *count);
   static HAPI_Result GetPresetNamesEmptyStub(const HAPI_Session *session, const char *buffer, int buffer_length, HAPI_StringHandle *preset_names_array, int count);
   static HAPI_Result GetObjectInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ObjectInfo *object_info);
   static HAPI_Result GetObjectTransformEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_NodeId relative_to_node_id, HAPI_RSTOrder rst_order, HAPI_Transform *transform);
   static HAPI_Result ComposeObjectListEmptyStub(const HAPI_Session *session, HAPI_NodeId parent_node_id, const char *categories, int *object_count);
   static HAPI_Result GetComposedObjectListEmptyStub(const HAPI_Session *session, HAPI_NodeId parent_node_id, HAPI_ObjectInfo *object_infos_array, int start, int length);
   static HAPI_Result GetComposedObjectTransformsEmptyStub(const HAPI_Session *session, HAPI_NodeId parent_node_id, HAPI_RSTOrder rst_order, HAPI_Transform *transform_array, int start, int length);
   static HAPI_Result GetInstancedObjectIdsEmptyStub(const HAPI_Session *session, HAPI_NodeId object_node_id, HAPI_NodeId *instanced_node_id_array, int start, int length);
   static HAPI_Result GetInstanceTransformsOnPartEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_RSTOrder rst_order, HAPI_Transform *transforms_array, int start, int length);
   static HAPI_Result SetObjectTransformEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const HAPI_TransformEuler *trans);
   static HAPI_Result GetDisplayGeoInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId object_node_id, HAPI_GeoInfo *geo_info);
   static HAPI_Result GetOutputGeoCountEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, int *count);
   static HAPI_Result GetOutputGeoInfosEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_GeoInfo *geo_infos_array, int count);
   static HAPI_Result GetGeoInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_GeoInfo *geo_info);
   static HAPI_Result GetPartInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_PartInfo *part_info);
   static HAPI_Result GetEdgeCountOfEdgeGroupEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *group_name, int *edge_count);
   static HAPI_Result GetFaceCountsEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int *face_counts_array, int start, int length);
   static HAPI_Result GetVertexListEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int *vertex_list_array, int start, int length);
   static HAPI_Result GetAttributeInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeOwner owner, HAPI_AttributeInfo *attr_info);
   static HAPI_Result GetAttributeNamesEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_AttributeOwner owner, HAPI_StringHandle *attribute_names_array, int count);
   static HAPI_Result GetAttributeIntDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, int *data_array, int start, int length);
   static HAPI_Result GetAttributeIntArrayDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length);
   static HAPI_Result GetAttributeUInt8DataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, HAPI_UInt8 *data_array, int start, int length);
   static HAPI_Result GetAttributeUInt8ArrayDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_UInt8 *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length);
   static HAPI_Result GetAttributeInt8DataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, HAPI_Int8 *data_array, int start, int length);
   static HAPI_Result GetAttributeInt8ArrayDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_Int8 *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length);
   static HAPI_Result GetAttributeInt16DataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, HAPI_Int16 *data_array, int start, int length);
   static HAPI_Result GetAttributeInt16ArrayDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_Int16 *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length);
   static HAPI_Result GetAttributeInt64DataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, HAPI_Int64 *data_array, int start, int length);
   static HAPI_Result GetAttributeInt64ArrayDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_Int64 *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length);
   static HAPI_Result GetAttributeFloatDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, float *data_array, int start, int length);
   static HAPI_Result GetAttributeFloatArrayDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, float *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length);
   static HAPI_Result GetAttributeFloat64DataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, double *data_array, int start, int length);
   static HAPI_Result GetAttributeFloat64ArrayDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, double *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length);
   static HAPI_Result GetAttributeStringDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_StringHandle *data_array, int start, int length);
   static HAPI_Result GetAttributeStringArrayDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_StringHandle *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length);
   static HAPI_Result GetAttributeDictionaryDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_StringHandle *data_array, int start, int length);
   static HAPI_Result GetAttributeDictionaryArrayDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_StringHandle *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length);
   static HAPI_Result GetAttributeIntDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, int *data_array, int start, int length, int *job_id);
   static HAPI_Result GetAttributeUInt8DataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, HAPI_UInt8 *data_array, int start, int length, int *job_id);
   static HAPI_Result GetAttributeInt8DataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, HAPI_Int8 *data_array, int start, int length, int *job_id);
   static HAPI_Result GetAttributeInt16DataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, HAPI_Int16 *data_array, int start, int length, int *job_id);
   static HAPI_Result GetAttributeInt64DataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, HAPI_Int64 *data_array, int start, int length, int *job_id);
   static HAPI_Result GetAttributeFloatDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, float *data_array, int start, int length, int *job_id);
   static HAPI_Result GetAttributeFloat64DataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, int stride, double *data_array, int start, int length, int *job_id);
   static HAPI_Result GetAttributeStringDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_StringHandle *data_array, int start, int length, int *job_id);
   static HAPI_Result GetAttributeDictionaryDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, HAPI_AttributeInfo *attr_info, HAPI_StringHandle *data_array, int start, int length, int *job_id);
   static HAPI_Result GetAttributeIntArrayDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *attr_name, HAPI_AttributeInfo *attr_info, int *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   static HAPI_Result GetAttributeUInt8ArrayDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *attr_name, HAPI_AttributeInfo *attr_info, HAPI_UInt8 *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   static HAPI_Result GetAttributeInt8ArrayDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *attr_name, HAPI_AttributeInfo *attr_info, HAPI_Int8 *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   static HAPI_Result GetAttributeInt16ArrayDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *attr_name, HAPI_AttributeInfo *attr_info, HAPI_Int16 *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   static HAPI_Result GetAttributeInt64ArrayDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *attr_name, HAPI_AttributeInfo *attr_info, HAPI_Int64 *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   static HAPI_Result GetAttributeFloatArrayDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *attr_name, HAPI_AttributeInfo *attr_info, float *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   static HAPI_Result GetAttributeFloat64ArrayDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *attr_name, HAPI_AttributeInfo *attr_info, double *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   static HAPI_Result GetAttributeStringArrayDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *attr_name, HAPI_AttributeInfo *attr_info, HAPI_StringHandle *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   static HAPI_Result GetAttributeDictionaryArrayDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *attr_name, HAPI_AttributeInfo *attr_info, HAPI_StringHandle *data_fixed_array, int data_fixed_length, int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   static HAPI_Result GetJobStatusEmptyStub(const HAPI_Session *session, int job_id, HAPI_JobStatus *job_status);
   static HAPI_Result GetGroupNamesEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_GroupType group_type, HAPI_StringHandle *group_names_array, int group_count);
   static HAPI_Result GetGroupMembershipEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char *group_name, HAPI_Bool *membership_array_all_equal, int *membership_array, int start, int length);
   static HAPI_Result GetGroupCountOnPackedInstancePartEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int *pointGroupCount, int *primitiveGroupCount);
   static HAPI_Result GetGroupNamesOnPackedInstancePartEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, HAPI_StringHandle *group_names_array, int group_count);
   static HAPI_Result GetGroupMembershipOnPackedInstancePartEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char *group_name, HAPI_Bool *membership_array_all_equal, int *membership_array, int start, int length);
   static HAPI_Result GetInstancedPartIdsEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_PartId *instanced_parts_array, int start, int length);
   static HAPI_Result GetInstancerPartTransformsEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_RSTOrder rst_order, HAPI_Transform *transforms_array, int start, int length);
   static HAPI_Result SetPartInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_PartInfo *part_info);
   static HAPI_Result SetFaceCountsEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const int *face_counts_array, int start, int length);
   static HAPI_Result SetVertexListEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const int *vertex_list_array, int start, int length);
   static HAPI_Result AddAttributeEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info);
   static HAPI_Result DeleteAttributeEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info);
   static HAPI_Result SetAttributeIntDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const int *data_array, int start, int length);
   static HAPI_Result SetAttributeUInt8DataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_UInt8 *data_array, int start, int length);
   static HAPI_Result SetAttributeInt8DataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int8 *data_array, int start, int length);
   static HAPI_Result SetAttributeInt16DataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int16 *data_array, int start, int length);
   static HAPI_Result SetAttributeInt64DataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int64 *data_array, int start, int length);
   static HAPI_Result SetAttributeFloatDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const float *data_array, int start, int length);
   static HAPI_Result SetAttributeFloat64DataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const double *data_array, int start, int length);
   static HAPI_Result SetAttributeStringDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **data_array, int start, int length);
   static HAPI_Result SetAttributeIndexedStringDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **string_array, int string_count, const int *indices_array, int indices_start, int indices_length);
   static HAPI_Result SetAttributeStringUniqueDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char *data_array, int data_length, int start_index, int num_indices);
   static HAPI_Result SetAttributeIntUniqueDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const int *data_array, int data_length, int start_index, int num_indices);
   static HAPI_Result SetAttributeUInt8UniqueDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_UInt8 *data_array, int data_length, int start_index, int num_indices);
   static HAPI_Result SetAttributeInt8UniqueDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int8 *data_array, int data_length, int start_index, int num_indices);
   static HAPI_Result SetAttributeInt16UniqueDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int16 *data_array, int data_length, int start_index, int num_indices);
   static HAPI_Result SetAttributeInt64UniqueDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int64 *data_array, int data_length, int start_index, int num_indices);
   static HAPI_Result SetAttributeFloatUniqueDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const float *data_array, int data_length, int start_index, int num_indices);
   static HAPI_Result SetAttributeFloat64UniqueDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const double *data_array, int data_length, int start_index, int num_indices);
   static HAPI_Result SetAttributeDictionaryDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **data_array, int start, int length);
   static HAPI_Result SetAttributeIntArrayDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const int *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length);
   static HAPI_Result SetAttributeUInt8ArrayDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_UInt8 *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length);
   static HAPI_Result SetAttributeInt8ArrayDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int8 *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length);
   static HAPI_Result SetAttributeInt16ArrayDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int16 *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length);
   static HAPI_Result SetAttributeInt64ArrayDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int64 *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length);
   static HAPI_Result SetAttributeFloatArrayDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const float *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length);
   static HAPI_Result SetAttributeFloat64ArrayDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const double *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length);
   static HAPI_Result SetAttributeStringArrayDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length);
   static HAPI_Result SetAttributeDictionaryArrayDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length);
   static HAPI_Result SetAttributeIntDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const int *data_array, int start, int length, int *job_id);
   static HAPI_Result SetAttributeUInt8DataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_UInt8 *data_array, int start, int length, int *job_id);
   static HAPI_Result SetAttributeInt8DataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int8 *data_array, int start, int length, int *job_id);
   static HAPI_Result SetAttributeInt16DataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int16 *data_array, int start, int length, int *job_id);
   static HAPI_Result SetAttributeInt64DataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int64 *data_array, int start, int length, int *job_id);
   static HAPI_Result SetAttributeFloatDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const float *data_array, int start, int length, int *job_id);
   static HAPI_Result SetAttributeFloat64DataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const double *data_array, int start, int length, int *job_id);
   static HAPI_Result SetAttributeStringDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **data_array, int start, int length, int *job_id);
   static HAPI_Result SetAttributeIndexedStringDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **string_array, int string_count, const int *indices_array, int indices_start, int indices_length, int *job_id);
   static HAPI_Result SetAttributeStringUniqueDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char *data_array, int data_length, int start_index, int num_indices, int *job_id);
   static HAPI_Result SetAttributeIntUniqueDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const int *data_array, int data_length, int start_index, int num_indices, int *job_id);
   static HAPI_Result SetAttributeUInt8UniqueDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_UInt8 *data_array, int data_length, int start_index, int num_indices, int *job_id);
   static HAPI_Result SetAttributeInt8UniqueDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int8 *data_array, int data_length, int start_index, int num_indices, int *job_id);
   static HAPI_Result SetAttributeInt16UniqueDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int16 *data_array, int data_length, int start_index, int num_indices, int *job_id);
   static HAPI_Result SetAttributeInt64UniqueDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int64 *data_array, int data_length, int start_index, int num_indices, int *job_id);
   static HAPI_Result SetAttributeFloatUniqueDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const float *data_array, int data_length, int start_index, int num_indices, int *job_id);
   static HAPI_Result SetAttributeFloat64UniqueDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const double *data_array, int data_length, int start_index, int num_indices, int *job_id);
   static HAPI_Result SetAttributeDictionaryDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **data_array, int start, int length, int *job_id);
   static HAPI_Result SetAttributeIntArrayDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const int *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   static HAPI_Result SetAttributeUInt8ArrayDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_UInt8 *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   static HAPI_Result SetAttributeInt8ArrayDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int8 *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   static HAPI_Result SetAttributeInt16ArrayDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int16 *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   static HAPI_Result SetAttributeInt64ArrayDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const HAPI_Int64 *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   static HAPI_Result SetAttributeFloatArrayDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const float *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   static HAPI_Result SetAttributeFloat64ArrayDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const double *data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   static HAPI_Result SetAttributeStringArrayDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   static HAPI_Result SetAttributeDictionaryArrayDataAsyncEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const HAPI_AttributeInfo *attr_info, const char **data_fixed_array, int data_fixed_length, const int *sizes_fixed_array, int start, int sizes_fixed_length, int *job_id);
   static HAPI_Result AddGroupEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char *group_name);
   static HAPI_Result DeleteGroupEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char *group_name);
   static HAPI_Result SetGroupMembershipEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_GroupType group_type, const char *group_name, const int *membership_array, int start, int length);
   static HAPI_Result CommitGeoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id);
   static HAPI_Result RevertGeoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id);
   static HAPI_Result GetMaterialNodeIdsOnFacesEmptyStub(const HAPI_Session *session, HAPI_NodeId geometry_node_id, HAPI_PartId part_id, HAPI_Bool *are_all_the_same, HAPI_NodeId *material_ids_array, int start, int length);
   static HAPI_Result GetMaterialInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId material_node_id, HAPI_MaterialInfo *material_info);
   static HAPI_Result RenderCOPToImageEmptyStub(const HAPI_Session *session, HAPI_NodeId cop_node_id);
   static HAPI_Result RenderTextureToImageEmptyStub(const HAPI_Session *session, HAPI_NodeId material_node_id, HAPI_ParmId parm_id);
   static HAPI_Result GetImageInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId material_node_id, HAPI_ImageInfo *image_info);
   static HAPI_Result SetImageInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId material_node_id, const HAPI_ImageInfo *image_info);
   static HAPI_Result GetImagePlaneCountEmptyStub(const HAPI_Session *session, HAPI_NodeId material_node_id, int *image_plane_count);
   static HAPI_Result GetImagePlanesEmptyStub(const HAPI_Session *session, HAPI_NodeId material_node_id, HAPI_StringHandle *image_planes_array, int image_plane_count);
   static HAPI_Result ExtractImageToFileEmptyStub(const HAPI_Session *session, HAPI_NodeId material_node_id, const char *image_file_format_name, const char *image_planes, const char *destination_folder_path, const char *destination_file_name, int *destination_file_path);
   static HAPI_Result GetImageFilePathEmptyStub(const HAPI_Session *session, HAPI_NodeId material_node_id, const char *image_file_format_name, const char *image_planes, const char *destination_folder_path, const char *destination_file_name, HAPI_ParmId texture_parm_id, int *destination_file_path);
   static HAPI_Result ExtractImageToMemoryEmptyStub(const HAPI_Session *session, HAPI_NodeId material_node_id, const char *image_file_format_name, const char *image_planes, int *buffer_size);
   static HAPI_Result GetImageMemoryBufferEmptyStub(const HAPI_Session *session, HAPI_NodeId material_node_id, char *buffer, int length);
   static HAPI_Result GetSupportedImageFileFormatCountEmptyStub(const HAPI_Session *session, int *file_format_count);
   static HAPI_Result GetSupportedImageFileFormatsEmptyStub(const HAPI_Session *session, HAPI_ImageFileFormat *formats_array, int file_format_count);
   static HAPI_Result SetAnimCurveEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_ParmId parm_id, int parm_index, const HAPI_Keyframe *curve_keyframes_array, int keyframe_count);
   static HAPI_Result SetTransformAnimCurveEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_TransformComponent trans_comp, const HAPI_Keyframe *curve_keyframes_array, int keyframe_count);
   static HAPI_Result ResetSimulationEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id);
   static HAPI_Result GetVolumeInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeInfo *volume_info);
   static HAPI_Result GetFirstVolumeTileEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeTileInfo *tile);
   static HAPI_Result GetNextVolumeTileEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeTileInfo *tile);
   static HAPI_Result GetVolumeVoxelFloatDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, float *values_array, int value_count);
   static HAPI_Result GetVolumeTileFloatDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, float fill_value, const HAPI_VolumeTileInfo *tile, float *values_array, int length);
   static HAPI_Result GetVolumeVoxelIntDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, int *values_array, int value_count);
   static HAPI_Result GetVolumeTileIntDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int fill_value, const HAPI_VolumeTileInfo *tile, int *values_array, int length);
   static HAPI_Result GetHeightFieldDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, float *values_array, int start, int length);
   static HAPI_Result SetVolumeInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_VolumeInfo *volume_info);
   static HAPI_Result SetVolumeTileFloatDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_VolumeTileInfo *tile, const float *values_array, int length);
   static HAPI_Result SetVolumeTileIntDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_VolumeTileInfo *tile, const int *values_array, int length);
   static HAPI_Result SetVolumeVoxelFloatDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, const float *values_array, int value_count);
   static HAPI_Result SetVolumeVoxelIntDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int x_index, int y_index, int z_index, const int *values_array, int value_count);
   static HAPI_Result GetVolumeBoundsEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, float *x_min, float *y_min, float *z_min, float *x_max, float *y_max, float *z_max, float *x_center, float *y_center, float *z_center);
   static HAPI_Result SetHeightFieldDataEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const char *name, const float *values_array, int start, int length);
   static HAPI_Result GetVolumeVisualInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_VolumeVisualInfo *visual_info);
   static HAPI_Result GetCurveInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_CurveInfo *info);
   static HAPI_Result GetCurveCountsEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int *counts_array, int start, int length);
   static HAPI_Result GetCurveOrdersEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, int *orders_array, int start, int length);
   static HAPI_Result GetCurveKnotsEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, float *knots_array, int start, int length);
   static HAPI_Result SetCurveInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_CurveInfo *info);
   static HAPI_Result SetCurveCountsEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const int *counts_array, int start, int length);
   static HAPI_Result SetCurveOrdersEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const int *orders_array, int start, int length);
   static HAPI_Result SetCurveKnotsEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const float *knots_array, int start, int length);
   static HAPI_Result GetInputCurveInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, HAPI_InputCurveInfo *info);
   static HAPI_Result SetInputCurveInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const HAPI_InputCurveInfo *info);
   static HAPI_Result SetInputCurvePositionsEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const float *positions_array, int start, int length);
   static HAPI_Result SetInputCurvePositionsRotationsScalesEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PartId part_id, const float *positions_array, int positions_start, int positions_length, const float *rotations_array, int rotations_start, int rotations_length, const float *scales_array, int scales_start, int scales_length);
   static HAPI_Result GetBoxInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId geo_node_id, HAPI_PartId part_id, HAPI_BoxInfo *box_info);
   static HAPI_Result GetSphereInfoEmptyStub(const HAPI_Session *session, HAPI_NodeId geo_node_id, HAPI_PartId part_id, HAPI_SphereInfo *sphere_info);
   static HAPI_Result GetActiveCacheCountEmptyStub(const HAPI_Session *session, int *active_cache_count);
   static HAPI_Result GetActiveCacheNamesEmptyStub(const HAPI_Session *session, HAPI_StringHandle *cache_names_array, int active_cache_count);
   static HAPI_Result GetCachePropertyEmptyStub(const HAPI_Session *session, const char *cache_name, HAPI_CacheProperty cache_property, int *property_value);
   static HAPI_Result SetCachePropertyEmptyStub(const HAPI_Session *session, const char *cache_name, HAPI_CacheProperty cache_property, int property_value);
   static HAPI_Result SaveGeoToFileEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *file_name);
   static HAPI_Result LoadGeoFromFileEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *file_name);
   static HAPI_Result SaveNodeToFileEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *file_name);
   static HAPI_Result LoadNodeFromFileEmptyStub(const HAPI_Session *session, const char *file_name, HAPI_NodeId parent_node_id, const char *node_label, HAPI_Bool cook_on_load, HAPI_NodeId *new_node_id);
   static HAPI_Result GetGeoSizeEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *format, int *size);
   static HAPI_Result SaveGeoToMemoryEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, char *buffer, int length);
   static HAPI_Result LoadGeoFromMemoryEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, const char *format, const char *buffer, int length);
   static HAPI_Result SetNodeDisplayEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, int onOff);
   static HAPI_Result GetTotalCookCountEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_NodeTypeBits node_type_filter, HAPI_NodeFlagsBits node_flags_filter, HAPI_Bool recursive, int *count);
   static HAPI_Result SetSessionSyncEmptyStub(const HAPI_Session *session, HAPI_Bool enable);
   static HAPI_Result GetViewportEmptyStub(const HAPI_Session *session, HAPI_Viewport *viewport);
   static HAPI_Result SetViewportEmptyStub(const HAPI_Session *session, const HAPI_Viewport *viewport);
   static HAPI_Result GetSessionSyncInfoEmptyStub(const HAPI_Session *session, HAPI_SessionSyncInfo *session_sync_info);
   static HAPI_Result SetSessionSyncInfoEmptyStub(const HAPI_Session *session, const HAPI_SessionSyncInfo *session_sync_info);
   static HAPI_Result GetPDGGraphContextsEmptyStub(const HAPI_Session *session, HAPI_StringHandle *context_names_array, HAPI_PDG_GraphContextId *context_id_array, int start, int length);
   static HAPI_Result GetPDGGraphContextsCountEmptyStub(const HAPI_Session *session, int *num_contexts);
   static HAPI_Result GetPDGGraphContextIdEmptyStub(const HAPI_Session *session, HAPI_NodeId top_node_id, HAPI_PDG_GraphContextId *context_id);
   static HAPI_Result CookPDGEmptyStub(const HAPI_Session *session, HAPI_NodeId cook_node_id, int generate_only, int blocking);
   static HAPI_Result CookPDGAllOutputsEmptyStub(const HAPI_Session *session, HAPI_NodeId cook_node_id, int generate_only, int blocking);
   static HAPI_Result GetPDGEventsEmptyStub(const HAPI_Session *session, HAPI_PDG_GraphContextId graph_context_id, HAPI_PDG_EventInfo *event_array, int length, int *event_count, int *remaining_events);
   static HAPI_Result GetPDGStateEmptyStub(const HAPI_Session *session, HAPI_PDG_GraphContextId graph_context_id, int *pdg_state);
   static HAPI_Result CreateWorkItemEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId *work_item_id, const char *name, int index);
   static HAPI_Result GetWorkItemInfoEmptyStub(const HAPI_Session *session, HAPI_PDG_GraphContextId graph_context_id, HAPI_PDG_WorkItemId work_item_id, HAPI_PDG_WorkItemInfo *work_item_info);
   static HAPI_Result SetWorkItemIntAttributeEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char *attribute_name, const int *values_array, int length);
   static HAPI_Result SetWorkItemFloatAttributeEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char *attribute_name, const float *values_array, int length);
   static HAPI_Result SetWorkItemStringAttributeEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char *attribute_name, int data_index, const char *value);
   static HAPI_Result CommitWorkItemsEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id);
   static HAPI_Result GetNumWorkItemsEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, int *num);
   static HAPI_Result GetWorkItemsEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, int *work_item_ids_array, int length);
   static HAPI_Result GetWorkItemAttributeSizeEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char *attribute_name, int *length);
   static HAPI_Result GetWorkItemIntAttributeEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char *attribute_name, int *data_array, int length);
   static HAPI_Result GetWorkItemFloatAttributeEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char *attribute_name, float *data_array, int length);
   static HAPI_Result GetWorkItemStringAttributeEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, const char *attribute_name, HAPI_StringHandle *data_array, int length);
   static HAPI_Result GetWorkItemOutputFilesEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_PDG_WorkItemId work_item_id, HAPI_PDG_WorkItemOutputFile *resultinfo_array, int resultinfo_count);
   static HAPI_Result DirtyPDGNodeEmptyStub(const HAPI_Session *session, HAPI_NodeId node_id, HAPI_Bool clean_results);
   static HAPI_Result PausePDGCookEmptyStub(const HAPI_Session *session, HAPI_PDG_GraphContextId graph_context_id);
   static HAPI_Result CancelPDGCookEmptyStub(const HAPI_Session *session, HAPI_PDG_GraphContextId graph_context_id);
   static void SessionInfo_InitEmptyStub(HAPI_SessionInfo *in);
   static HAPI_SessionInfo SessionInfo_CreateEmptyStub();
   static void ThriftServerOptions_InitEmptyStub(HAPI_ThriftServerOptions *in);
   static HAPI_ThriftServerOptions ThriftServerOptions_CreateEmptyStub();
   static void TimelineOptions_InitEmptyStub(HAPI_TimelineOptions *in);
   static HAPI_TimelineOptions TimelineOptions_CreateEmptyStub();
   static void CompositorOptions_InitEmptyStub(HAPI_CompositorOptions *in);
   static HAPI_CompositorOptions CompositorOptions_CreateEmptyStub();
   static void AssetInfo_InitEmptyStub(HAPI_AssetInfo *in);
   static HAPI_AssetInfo AssetInfo_CreateEmptyStub();
   static void CookOptions_InitEmptyStub(HAPI_CookOptions *in);
   static HAPI_CookOptions CookOptions_CreateEmptyStub();
   static HAPI_Bool CookOptions_AreEqualEmptyStub(const HAPI_CookOptions *left, const HAPI_CookOptions *right);
   static void NodeInfo_InitEmptyStub(HAPI_NodeInfo *in);
   static HAPI_NodeInfo NodeInfo_CreateEmptyStub();
   static void ParmInfo_InitEmptyStub(HAPI_ParmInfo *in);
   static HAPI_ParmInfo ParmInfo_CreateEmptyStub();
   static HAPI_Bool ParmInfo_IsIntEmptyStub(const HAPI_ParmInfo *in);
   static HAPI_Bool ParmInfo_IsFloatEmptyStub(const HAPI_ParmInfo *in);
   static HAPI_Bool ParmInfo_IsStringEmptyStub(const HAPI_ParmInfo *in);
   static HAPI_Bool ParmInfo_IsPathEmptyStub(const HAPI_ParmInfo *in);
   static HAPI_Bool ParmInfo_IsNodeEmptyStub(const HAPI_ParmInfo *in);
   static HAPI_Bool ParmInfo_IsNonValueEmptyStub(const HAPI_ParmInfo *in);
   static int ParmInfo_GetIntValueCountEmptyStub(const HAPI_ParmInfo *in);
   static int ParmInfo_GetFloatValueCountEmptyStub(const HAPI_ParmInfo *in);
   static int ParmInfo_GetStringValueCountEmptyStub(const HAPI_ParmInfo *in);
   static void ParmChoiceInfo_InitEmptyStub(HAPI_ParmChoiceInfo *in);
   static HAPI_ParmChoiceInfo ParmChoiceInfo_CreateEmptyStub();
   static void HandleInfo_InitEmptyStub(HAPI_HandleInfo *in);
   static HAPI_HandleInfo HandleInfo_CreateEmptyStub();
   static void HandleBindingInfo_InitEmptyStub(HAPI_HandleBindingInfo *in);
   static HAPI_HandleBindingInfo HandleBindingInfo_CreateEmptyStub();
   static void ObjectInfo_InitEmptyStub(HAPI_ObjectInfo *in);
   static HAPI_ObjectInfo ObjectInfo_CreateEmptyStub();
   static void GeoInfo_InitEmptyStub(HAPI_GeoInfo *in);
   static HAPI_GeoInfo GeoInfo_CreateEmptyStub();
   static int GeoInfo_GetGroupCountByTypeEmptyStub(HAPI_GeoInfo *in, HAPI_GroupType type);
   static void PartInfo_InitEmptyStub(HAPI_PartInfo *in);
   static HAPI_PartInfo PartInfo_CreateEmptyStub();
   static int PartInfo_GetElementCountByAttributeOwnerEmptyStub(HAPI_PartInfo *in, HAPI_AttributeOwner owner);
   static int PartInfo_GetElementCountByGroupTypeEmptyStub(HAPI_PartInfo *in, HAPI_GroupType type);
   static int PartInfo_GetAttributeCountByOwnerEmptyStub(HAPI_PartInfo *in, HAPI_AttributeOwner owner);
   static void AttributeInfo_InitEmptyStub(HAPI_AttributeInfo *in);
   static HAPI_AttributeInfo AttributeInfo_CreateEmptyStub();
   static void MaterialInfo_InitEmptyStub(HAPI_MaterialInfo *in);
   static HAPI_MaterialInfo MaterialInfo_CreateEmptyStub();
   static void ImageFileFormat_InitEmptyStub(HAPI_ImageFileFormat *in);
   static HAPI_ImageFileFormat ImageFileFormat_CreateEmptyStub();
   static void ImageInfo_InitEmptyStub(HAPI_ImageInfo *in);
   static HAPI_ImageInfo ImageInfo_CreateEmptyStub();
   static void Keyframe_InitEmptyStub(HAPI_Keyframe *in);
   static HAPI_Keyframe Keyframe_CreateEmptyStub();
   static void VolumeInfo_InitEmptyStub(HAPI_VolumeInfo *in);
   static HAPI_VolumeInfo VolumeInfo_CreateEmptyStub();
   static void VolumeTileInfo_InitEmptyStub(HAPI_VolumeTileInfo *in);
   static HAPI_VolumeTileInfo VolumeTileInfo_CreateEmptyStub();
   static void CurveInfo_InitEmptyStub(HAPI_CurveInfo *in);
   static HAPI_CurveInfo CurveInfo_CreateEmptyStub();
   static void InputCurveInfo_InitEmptyStub(HAPI_InputCurveInfo *in);
   static HAPI_InputCurveInfo InputCurveInfo_CreateEmptyStub();
   static void Transform_InitEmptyStub(HAPI_Transform *in);
   static HAPI_Transform Transform_CreateEmptyStub();
   static void TransformEuler_InitEmptyStub(HAPI_TransformEuler *in);
   static HAPI_TransformEuler TransformEuler_CreateEmptyStub();
   static void Viewport_InitEmptyStub(HAPI_Viewport *in);
   static HAPI_Viewport Viewport_CreateEmptyStub();
   static void SessionSyncInfo_InitEmptyStub(HAPI_SessionSyncInfo *in);
   static HAPI_SessionSyncInfo SessionSyncInfo_CreateEmptyStub();
};
